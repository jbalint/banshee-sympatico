# baseURI: http://www.semanticdesktop.org/ontologies/2008/05/20/tmo/v1.1/

@prefix nao: <http://www.semanticdesktop.org/ontologies/2007/08/15/nao#> .
@prefix nrl: <http://www.semanticdesktop.org/ontologies/2007/08/15/nrl#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix pimo: <http://www.semanticdesktop.org/ontologies/2007/11/01/pimo#> .
@prefix protege: <http://protege.stanford.edu/system#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix tmo: <http://www.semanticdesktop.org/ontologies/2008/05/20/tmo#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

tmo:AbilityCarrier
  rdf:type rdfs:Class ;
  protege:role "abstract" ;
  rdfs:comment """AbilityCarrier is an abstract class which circumferences all entities which can take action or which are somehow involved in tasks.
This is in other task conceptualizations rather named \"actor\". But here it is named AbilityCarrier because it is not neccessarily \"active\".

The execution of a task relies on certain abilities. The abstract concept of
Abilitiy_Carriers circumference all those more concrete concepts
of which one can think of while working on tasks. Using this abstract
class enables to substitute such Ability Carrier's in the process of
generating patterns from task instances and vice versa in the process of
instantiating task instances from patterns without violating the schema.
With this attribute, a series of ability carrying entities (Person, Role,
Skill, OrganizationalUnit, InformalDescribedAbility)
and the role of involvement (required, request, used) is enabled. The role
hereby allows specifying how the ability carrying entity is or was
involved.""" ;
  rdfs:label "AbilityCarrier" ;
  rdfs:subClassOf rdfs:Resource ;
.
tmo:AbilityCarrierInvolvement
  rdf:type rdfs:Class ;
  rdfs:comment "The class AbilityCarrier_Involvement ties together an AbilityCarrier with an AbilityCarrier_Role. This is a role based modelling approach. An n-ary relation is realized." ;
  rdfs:label "AbilityCarrierInvolvement" ;
  rdfs:subClassOf pimo:Association ;
  rdfs:subClassOf rdfs:Resource ;
.
tmo:AbilityCarrierRole
  rdf:type rdfs:Class ;
  rdfs:comment "Examples instances  of AbilityCarrirRoles are e.g. \"requested\", \"required\" and \"used\" which further specify the type a person was involved in." ;
  rdfs:label "AbilityCarrierRole" ;
  rdfs:subClassOf tmo:StateTypeRole ;
.
tmo:AgentAbilityCarrier
  rdf:type rdfs:Class ;
  protege:role "abstract" ;
  rdfs:label "AgentAbilityCarrier" ;
  rdfs:subClassOf tmo:AbilityCarrier ;
.
tmo:AssociationDependency
  rdf:type rdfs:Class ;
  rdfs:label "AssociationDependency" ;
  rdfs:subClassOf tmo:UndirectedDependency ;
.
tmo:Attachment
  rdf:type rdfs:Class ;
  rdfs:comment "By means of attachments, references to other resources can be established. Resources are information objects. Every Thing, which can be referenced, on the SSD is an information object. In contrast to the usual SSD references/associations, here additionally information can be specified. Further metadata about the role an attachment plays can be stated by means of instances of AttachmentRole. It can be expressed what the Role of attachment is e.g., regarding \"desired/requested\" or \"required\" or \"potentially useful / somehow related\" or \"used/produced/achieved\". The reference property models the actual link to the attached piece of information." ;
  rdfs:label "Attachment" ;
  rdfs:subClassOf pimo:Association ;
  rdfs:subClassOf rdfs:Resource ;
.
tmo:AttachmentRole
  rdf:type rdfs:Class ;
  rdfs:comment "AttachmentRoles further specify the type of how an attachment relates to a task. Example instances  of AttachmentRoles are e.g. \"desired_request\", \"required\" and \"used\"." ;
  rdfs:label "AttachmentRole" ;
  rdfs:subClassOf tmo:StateTypeRole ;
.
tmo:Delegability
  rdf:type rdfs:Class ;
  rdfs:label "Delegability" ;
  rdfs:subClassOf tmo:StateTypeRole ;
.
tmo:Importance
  rdf:type rdfs:Class ;
  rdfs:label "Importance" ;
  rdfs:subClassOf tmo:StateTypeRole ;
.
tmo:Interdependence
  rdf:type rdfs:Class ;
  rdfs:label "Interdependence" ;
  rdfs:subClassOf tmo:UndirectedDependency ;
.
tmo:PersonInvolvement
  rdf:type rdfs:Class ;
  rdfs:comment "PersonInvolvement  realizes n-ary associations to Persons which are realtedd to an task. The involvement is further characterized by an PersonTaskRole." ;
  rdfs:label "PersonInvolvement" ;
  rdfs:subClassOf pimo:Association ;
  rdfs:subClassOf rdfs:Resource ;
.
tmo:PersonInvolvementRole
  rdf:type rdfs:Class ;
  rdfs:comment """They further specify the type a person was related to an task.
Examples instances  of AttachmentRoles are e.g.""" ;
  rdfs:label "PersonInvolvementRole" ;
  rdfs:subClassOf tmo:StateTypeRole ;
.
tmo:PredecessorDependency
  rdf:type rdfs:Class ;
  rdfs:comment "In a  PredecessorDependency the dependencyMemberA is the task which is to be executed before dependencyMemberB." ;
  rdfs:label "PredecessorDependency" ;
  rdfs:subClassOf tmo:PredecessorSuccessorDependency ;
.
tmo:PredecessorSuccessorDependency
  rdf:type rdfs:Class ;
  protege:role "abstract" ;
  rdfs:comment "The PredecessorSuccessorDependency enables a directed relation between task. By means of the concrete sublcasses one can further distinguish from which point of view this relation is created." ;
  rdfs:label "PredecessorSuccessorDependency" ;
  rdfs:subClassOf tmo:TaskDependency ;
.
tmo:Priority
  rdf:type rdfs:Class ;
  rdfs:label "Priority" ;
  rdfs:subClassOf tmo:StateTypeRole ;
.
tmo:Role
  rdf:type rdfs:Class ;
  rdfs:comment "examples: Architect, Developer, ..." ;
  rdfs:label "Role" ;
  rdfs:subClassOf tmo:AbilityCarrier ;
.
tmo:SimilarityDependence
  rdf:type rdfs:Class ;
  rdfs:label "SimilarityDependence" ;
  rdfs:subClassOf tmo:UndirectedDependency ;
.
tmo:Skill
  rdf:type rdfs:Class ;
  rdfs:comment "examples are e.g. technologies like Java, XML,  ..." ;
  rdfs:label "Skill" ;
  rdfs:subClassOf tmo:AbilityCarrier ;
.
tmo:StateTypeRole
  rdf:type rdfs:Class ;
  rdfs:comment "StateTypeRole is an abstract class which subsumes various other classes which represent \"states\" or roles e.g. in role based modelling conpetualisations." ;
  rdfs:label "StateTypeRole" ;
  rdfs:subClassOf rdfs:Resource ;
.
tmo:SuccessorDependency
  rdf:type rdfs:Class ;
  rdfs:comment "In a SuccessorrDependency the dependencyMemberA is the task which is to be executed after dependencyMemberB." ;
  rdfs:label "SuccessorDependency" ;
  rdfs:subClassOf tmo:PredecessorSuccessorDependency ;
.
tmo:SuperSubTaskDependency
  rdf:type rdfs:Class ;
  rdfs:comment "By means of the SuperSubTaskDependency one can further describe the subtask-supertask relation .e.g by an descriptin. This enables an n-ary relation between subtask and supertask." ;
  rdfs:label "SuperSubTaskDependency" ;
  rdfs:subClassOf tmo:TaskDependency ;
.
tmo:TMO_Instance_AbilityCarrierRole_Requested
  rdf:type tmo:AbilityCarrierRole ;
  rdfs:label "TMO_Instance_AbilityCarrierRole_Requested" ;
.
tmo:TMO_Instance_AbilityCarrierRole_Required
  rdf:type tmo:AbilityCarrierRole ;
  rdfs:label "TMO_Instance_AbilityCarrierRole_Required" ;
.
tmo:TMO_Instance_AbilityCarrierRole_Used
  rdf:type tmo:AbilityCarrierRole ;
  rdfs:label "TMO_Instance_AbilityCarrierRole_Used" ;
.
tmo:TMO_Instance_AttachmentRole_Desired_Requested
  rdf:type tmo:AttachmentRole ;
  rdfs:label "TMO_Instance_AttachmentRole_Desired_Requested" ;
.
tmo:TMO_Instance_AttachmentRole_Related
  rdf:type tmo:AttachmentRole ;
  rdfs:label "TMO_Instance_AttachmentRole_Related" ;
.
tmo:TMO_Instance_AttachmentRole_Required
  rdf:type tmo:AttachmentRole ;
  rdfs:label "TMO_Instance_AttachmentRole_Required" ;
.
tmo:TMO_Instance_AttachmentRole_Used
  rdf:type tmo:AttachmentRole ;
  rdfs:label "TMO_Instance_AttachmentRole_Used" ;
.
tmo:TMO_Instance_Delegability_High
  rdf:type tmo:Delegability ;
  rdfs:label "TMO_Instance_Delegability_High" ;
.
tmo:TMO_Instance_Delegability_Low
  rdf:type tmo:Delegability ;
  rdfs:label "TMO_Instance_Delegability_Low" ;
.
tmo:TMO_Instance_Delegability_Medium
  rdf:type tmo:Delegability ;
  rdfs:label "TMO_Instance_Delegability_Medium" ;
.
tmo:TMO_Instance_Delegability_Never
  rdf:type tmo:Delegability ;
  rdfs:label "TMO_Instance_Delegability_Never" ;
.
tmo:TMO_Instance_Delegability_Unrestricted
  rdf:type tmo:Delegability ;
  rdfs:label "TMO_Instance_Delegability_Unrestricted" ;
.
tmo:TMO_Instance_Importance_01
  rdf:type tmo:Importance ;
  rdfs:label "TMO_Instance_Importance_01" ;
.
tmo:TMO_Instance_Importance_02
  rdf:type tmo:Importance ;
  rdfs:label "TMO_Instance_Importance_02" ;
.
tmo:TMO_Instance_Importance_03
  rdf:type tmo:Importance ;
  rdfs:label "TMO_Instance_Importance_03" ;
.
tmo:TMO_Instance_Importance_04
  rdf:type tmo:Importance ;
  rdfs:label "TMO_Instance_Importance_04" ;
.
tmo:TMO_Instance_Importance_05
  rdf:type tmo:Importance ;
  rdfs:label "TMO_Instance_Importance_05" ;
.
tmo:TMO_Instance_Importance_06
  rdf:type tmo:Importance ;
  rdfs:label "TMO_Instance_Importance_06" ;
.
tmo:TMO_Instance_Importance_07
  rdf:type tmo:Importance ;
  rdfs:label "TMO_Instance_Importance_07" ;
.
tmo:TMO_Instance_Importance_08
  rdf:type tmo:Importance ;
  rdfs:label "TMO_Instance_Importance_08" ;
.
tmo:TMO_Instance_Importance_09
  rdf:type tmo:Importance ;
  rdfs:label "TMO_Instance_Importance_09" ;
.
tmo:TMO_Instance_Importance_10
  rdf:type tmo:Importance ;
  rdfs:label "TMO_Instance_Importance_10" ;
.
tmo:TMO_Instance_PersonInvolvementRole_Analyst
  rdf:type tmo:PersonInvolvementRole ;
  rdfs:label "TMO_Instance_PersonInvolvementRole_Analyst" ;
.
tmo:TMO_Instance_PersonInvolvementRole_Co-worker
  rdf:type tmo:PersonInvolvementRole ;
  rdfs:label "TMO_Instance_PersonInvolvementRole_Co-worker" ;
.
tmo:TMO_Instance_PersonInvolvementRole_Collaborator
  rdf:type tmo:PersonInvolvementRole ;
  rdfs:label "TMO_Instance_PersonInvolvementRole_Collaborator" ;
.
tmo:TMO_Instance_PersonInvolvementRole_Controller
  rdf:type tmo:PersonInvolvementRole ;
  rdfs:label "TMO_Instance_PersonInvolvementRole_Controller" ;
.
tmo:TMO_Instance_PersonInvolvementRole_Creator
  rdf:type tmo:PersonInvolvementRole ;
  rdfs:label "TMO_Instance_PersonInvolvementRole_Creator" ;
.
tmo:TMO_Instance_PersonInvolvementRole_Delegate
  rdf:type tmo:PersonInvolvementRole ;
  rdfs:label "TMO_Instance_PersonInvolvementRole_Delegate" ;
.
tmo:TMO_Instance_PersonInvolvementRole_Executor
  rdf:type tmo:PersonInvolvementRole ;
  rdfs:label "TMO_Instance_PersonInvolvementRole_Executor" ;
.
tmo:TMO_Instance_PersonInvolvementRole_ExternalObserver
  rdf:type tmo:PersonInvolvementRole ;
  rdfs:label "TMO_Instance_PersonInvolvementRole_ExternalObserver" ;
.
tmo:TMO_Instance_PersonInvolvementRole_Initiator
  rdf:type tmo:PersonInvolvementRole ;
  rdfs:label "TMO_Instance_PersonInvolvementRole_Initiator" ;
.
tmo:TMO_Instance_PersonInvolvementRole_InternalObserver
  rdf:type tmo:PersonInvolvementRole ;
  rdfs:label "TMO_Instance_PersonInvolvementRole_InternalObserver" ;
.
tmo:TMO_Instance_PersonInvolvementRole_Involved
  rdf:type tmo:PersonInvolvementRole ;
  rdfs:label "TMO_Instance_PersonInvolvementRole_Involved" ;
.
tmo:TMO_Instance_PersonInvolvementRole_Observer
  rdf:type tmo:PersonInvolvementRole ;
  rdfs:label "TMO_Instance_PersonInvolvementRole_Observer" ;
.
tmo:TMO_Instance_PersonInvolvementRole_Owner
  rdf:type tmo:PersonInvolvementRole ;
  rdfs:label "TMO_Instance_PersonInvolvementRole_Owner" ;
.
tmo:TMO_Instance_PersonInvolvementRole_Receiver
  rdf:type tmo:PersonInvolvementRole ;
  rdfs:label "TMO_Instance_PersonInvolvementRole_Receiver" ;
.
tmo:TMO_Instance_PersonInvolvementRole_Related
  rdf:type tmo:PersonInvolvementRole ;
  rdfs:label "TMO_Instance_PersonInvolvementRole_Related" ;
.
tmo:TMO_Instance_PersonInvolvementRole_Reviewer
  rdf:type tmo:PersonInvolvementRole ;
  rdfs:label "TMO_Instance_PersonInvolvementRole_Reviewer" ;
.
tmo:TMO_Instance_PersonInvolvementRole_Suggested
  rdf:type tmo:PersonInvolvementRole ;
  rdfs:label "TMO_Instance_PersonInvolvementRole_Suggested" ;
.
tmo:TMO_Instance_Priority_High
  rdf:type tmo:Priority ;
  rdfs:label "TMO_Instance_Priority_High" ;
.
tmo:TMO_Instance_Priority_Low
  rdf:type tmo:Priority ;
  rdfs:label "TMO_Instance_Priority_Low" ;
.
tmo:TMO_Instance_Priority_Medium
  rdf:type tmo:Priority ;
  rdfs:label "TMO_Instance_Priority_Medium" ;
.
tmo:TMO_Instance_TaskContainer_activetasks
  rdf:type tmo:TaskContainer ;
  rdfs:label "TMO_Instance_TaskContainer_activetasks" ;
.
tmo:TMO_Instance_TaskContainer_archive
  rdf:type tmo:TaskContainer ;
  rdfs:label "TMO_Instance_TaskContainer_archive" ;
.
tmo:TMO_Instance_TaskContainer_inbox
  rdf:type tmo:TaskContainer ;
  rdfs:label "TMO_Instance_TaskContainer_inbox" ;
.
tmo:TMO_Instance_TaskContainer_outbox
  rdf:type tmo:TaskContainer ;
  rdfs:label "TMO_Instance_TaskContainer_outbox" ;
.
tmo:TMO_Instance_TaskContainer_trashtasks
  rdf:type tmo:TaskContainer ;
  rdfs:label "TMO_Instance_TaskContainer_trashtasks" ;
.
tmo:TMO_Instance_TaskPrivacy_Private
  rdf:type tmo:TaskPrivacyState ;
  rdfs:label "TMO_Instance_TaskPrivacy_Private" ;
.
tmo:TMO_Instance_TaskPrivacy_Professional
  rdf:type tmo:TaskPrivacyState ;
  rdfs:label "TMO_Instance_TaskPrivacy_Professional" ;
.
tmo:TMO_Instance_TaskState_Archived
  rdf:type tmo:TaskState ;
  rdfs:label "TMO_Instance_TaskState_Archived" ;
.
tmo:TMO_Instance_TaskState_Completed
  rdf:type tmo:TaskState ;
  rdfs:label "TMO_Instance_TaskState_Completed" ;
.
tmo:TMO_Instance_TaskState_Deleted
  rdf:type tmo:TaskState ;
  rdfs:label "TMO_Instance_TaskState_Deleted" ;
.
tmo:TMO_Instance_TaskState_Finalized
  rdf:type tmo:TaskState ;
  rdfs:label "TMO_Instance_TaskState_Finalized" ;
.
tmo:TMO_Instance_TaskState_New
  rdf:type tmo:TaskState ;
  rdfs:label "TMO_Instance_TaskState_New" ;
.
tmo:TMO_Instance_TaskState_Running
  rdf:type tmo:TaskState ;
  rdfs:label "TMO_Instance_TaskState_Running" ;
.
tmo:TMO_Instance_TaskState_Suspended
  rdf:type tmo:TaskState ;
  rdfs:label "TMO_Instance_TaskState_Suspended" ;
.
tmo:TMO_Instance_TaskState_Terminated
  rdf:type tmo:TaskState ;
  rdfs:label "TMO_Instance_TaskState_Terminated" ;
.
tmo:TMO_Instance_TransmissionState_Accepted_NotTransmitted
  rdf:type tmo:TransmissionState ;
  rdfs:label "TMO_Instance_TransmissionState_Accepted_NotTransmitted" ;
.
tmo:TMO_Instance_TransmissionState_Accepted_Transmitted
  rdf:type tmo:TransmissionState ;
  rdfs:label "TMO_Instance_TransmissionState_Accepted_Transmitted" ;
.
tmo:TMO_Instance_TransmissionState_NotTransmitted
  rdf:type tmo:TransmissionState ;
  rdfs:label "TMO_Instance_TransmissionState_NotTransmitted" ;
.
tmo:TMO_Instance_TransmissionState_Rejected_NotTransmitted
  rdf:type tmo:TransmissionState ;
  rdfs:label "TMO_Instance_TransmissionState_Rejected_NotTransmitted" ;
.
tmo:TMO_Instance_TransmissionState_Rejected_Transmitted
  rdf:type tmo:TransmissionState ;
  rdfs:label "TMO_Instance_TransmissionState_Rejected_Transmitted" ;
.
tmo:TMO_Instance_TransmissionState_Transmitted
  rdf:type tmo:TransmissionState ;
  rdfs:label "TMO_Instance_TransmissionState_Transmitted" ;
.
tmo:TMO_Instance_TransmissionType_Delegation
  rdf:type tmo:TransmissionType ;
  rdfs:label "TMO_Instance_TransmissionType_Delegation" ;
.
tmo:TMO_Instance_TransmissionType_Join
  rdf:type tmo:TransmissionType ;
  rdfs:label "TMO_Instance_TransmissionType_Join" ;
.
tmo:TMO_Instance_TransmissionType_Transfer
  rdf:type tmo:TransmissionType ;
  rdfs:label "TMO_Instance_TransmissionType_Transfer" ;
.
tmo:TMO_Instance_Urgency_01
  rdf:type tmo:Urgency ;
  rdfs:label "TMO_Instance_Urgency_01" ;
.
tmo:TMO_Instance_Urgency_02
  rdf:type tmo:Urgency ;
  rdfs:label "TMO_Instance_Urgency_02" ;
.
tmo:TMO_Instance_Urgency_03
  rdf:type tmo:Urgency ;
  rdfs:label "TMO_Instance_Urgency_03" ;
.
tmo:TMO_Instance_Urgency_04
  rdf:type tmo:Urgency ;
  rdfs:label "TMO_Instance_Urgency_04" ;
.
tmo:TMO_Instance_Urgency_05
  rdf:type tmo:Urgency ;
  rdfs:label "TMO_Instance_Urgency_05" ;
.
tmo:TMO_Instance_Urgency_06
  rdf:type tmo:Urgency ;
  rdfs:label "TMO_Instance_Urgency_06" ;
.
tmo:TMO_Instance_Urgency_07
  rdf:type tmo:Urgency ;
  rdfs:label "TMO_Instance_Urgency_07" ;
.
tmo:TMO_Instance_Urgency_08
  rdf:type tmo:Urgency ;
  rdfs:label "TMO_Instance_Urgency_08" ;
.
tmo:TMO_Instance_Urgency_09
  rdf:type tmo:Urgency ;
  rdfs:label "TMO_Instance_Urgency_09" ;
.
tmo:TMO_Instance_Urgency_10
  rdf:type tmo:Urgency ;
  rdfs:label "TMO_Instance_Urgency_10" ;
.
tmo:Task
  rdf:type rdfs:Class ;
  rdfs:comment "The tmo:task is the central entitiey of the tmo. Task can range from vague things to be possibly done in e distant future to concrete things to be done in a precise forseeable manner. It is not unrealisitc to assume that knowledge worker have hundred or more tasks a day." ;
  rdfs:label "Task" ;
  rdfs:subClassOf pimo:Task ;
.
tmo:TaskContainer
  rdf:type rdfs:Class ;
  rdfs:label "TaskContainer" ;
  rdfs:subClassOf pimo:Collection ;
.
tmo:TaskDependency
  rdf:type rdfs:Class ;
  protege:role "abstract" ;
  rdfs:comment """Between the tasks, further dependencies may exist. These dependencies allow for a graph network structure. For ease of use, dependencies should not be too frequent, otherwise the primarily character of a hierarchy would be diminished and a consequent graph representation would become considerable. However, such a graph representation has other drawbacks, the user is likely to loose oversight, tree structures are more helpful in structuring the work.

A dependency relation is characterized by the type of the relation and by an additional description. There are different possibilities for dependency relations between tasks.""" ;
  rdfs:label "TaskDependency" ;
  rdfs:subClassOf pimo:Association ;
  rdfs:subClassOf rdfs:Resource ;
.
tmo:TaskPrivacyState
  rdf:type rdfs:Class ;
  rdfs:comment """Privacy Status serves for the separation between a professional and a private purpose of a task. This attribute provides with the values \"professional/private\" a high-level separation of privacy in terms of setting distribution and access
rights to other users for the task.
This separation may arise as a general Nepomuk issue and may therefore be handled in conjunction with a privacy preserving SSD architecture.""" ;
  rdfs:label "TaskPrivacyState" ;
  rdfs:subClassOf tmo:StateTypeRole ;
.
tmo:TaskState
  rdf:type rdfs:Class ;
  rdfs:comment """The task state property allows tracking a task during its lifecycle. Initially the state is just \"created\". 
The TaskState class was modeled so that for each state can be set which the typical prior and posterior states are. This has the advantage that e.g. a UI can retrieve the allowed states at runtime from the ontology; rather can having this potentially changing knowledge hard coded. But the prior and posterior states are only defaults; the human user is always free to change the state.""" ;
  rdfs:label "TaskState" ;
  rdfs:subClassOf tmo:StateTypeRole ;
.
tmo:TaskTransmission
  rdf:type rdfs:Class ;
  rdfs:comment """On the SSD, tasks are not restricted to one person and may cross from
the PTM of one person to the PTM of another. With transmission, we
refer to the process of sending a task from one person (sender) to one
or more other persons (receiver(s)) (see Section 5.2.1.3 Task
Transmission). Task delegation and task transfer are two special kinds of
task transmission which are described at the end of this section. In
addition, the collaborative task is realized by task transmission.
For the process of sending a task, some information is required. This
information is also modelled in the task ontology. This information is still
useful after the process of sending a task was completed. Task Delegation is a process where the sender of the task restricts the
access rights of the receiver. This includes the right to distribute further
this task and additionally the obligation to give feedback to the sender.
The person that receives a task by delegation usually has not the full
control about the task. The attributes described in the following section
have the purpose to enable such \"access rights\". The receiver will also
probably have obligations regarding what to report to whom at which
time.
In contrast, the simplest case is that all rights are granted to the receiver
and there is no feedback desired by the sender. What to do with the task
may be apparent by the organization context, or it may be left to the
receiver. This is like sending an email but with the advantage that the
information is transferred in the \"task space\" of the participating persons.""" ;
  rdfs:label "TaskTransmission" ;
  rdfs:subClassOf rdfs:Resource ;
.
tmo:TransmissionState
  rdf:type rdfs:Class ;
  rdfs:comment "States a task can go through during transmission of an task." ;
  rdfs:label "TransmissionState" ;
  rdfs:subClassOf tmo:StateTypeRole ;
.
tmo:TransmissionType
  rdf:type rdfs:Class ;
  rdfs:comment "By means of the TransmissionType one can distinguish several different types which might imply a different business logic. e.g. delegation can mean that the results of the task fulfillment care to be reported back to the sender of the task." ;
  rdfs:label "TransmissionType" ;
  rdfs:subClassOf tmo:StateTypeRole ;
.
tmo:UndirectedDependency
  rdf:type rdfs:Class ;
  rdfs:comment "A symmetric relations between task." ;
  rdfs:label "UndirectedDependency" ;
  rdfs:subClassOf tmo:TaskDependency ;
.
tmo:Urgency
  rdf:type rdfs:Class ;
  rdfs:label "Urgency" ;
  rdfs:subClassOf tmo:StateTypeRole ;
.
tmo:abilityCarrier
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  nrl:minCardinality "1" ;
  rdfs:domain tmo:AbilityCarrierInvolvement ;
  rdfs:label "abilityCarrier" ;
  rdfs:range tmo:AbilityCarrier ;
  rdfs:subPropertyOf pimo:associationMember ;
.
tmo:abilityCarrierInvolvement
  rdf:type rdf:Property ;
  nrl:inverseProperty tmo:abilityCarrierTask ;
  rdfs:domain tmo:Task ;
  rdfs:label "abilityCarrierInvolvement" ;
  rdfs:range tmo:AbilityCarrierInvolvement ;
.
tmo:abilityCarrierRole
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  nrl:minCardinality "1" ;
  rdfs:domain tmo:AbilityCarrierInvolvement ;
  rdfs:label "abilityCarrierRole" ;
  rdfs:range tmo:AbilityCarrierRole ;
  rdfs:subPropertyOf tmo:stateTypeRole ;
.
tmo:abilityCarrierTask
  rdf:type rdf:Property ;
  nrl:inverseProperty tmo:abilityCarrierInvolvement ;
  nrl:maxCardinality "1" ;
  rdfs:domain tmo:AbilityCarrierInvolvement ;
  rdfs:label "abilityCarrierTask" ;
  rdfs:range tmo:Task ;
  rdfs:subPropertyOf pimo:associationMember ;
.
tmo:actualCompletion
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:domain tmo:Task ;
  rdfs:label "actualCompletion" ;
  rdfs:range rdfs:Literal ;
  rdfs:subPropertyOf tmo:progress ;
.
tmo:actualEndTime
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:domain tmo:Task ;
  rdfs:label "actualEndTime" ;
  rdfs:range xsd:dateTime ;
  rdfs:subPropertyOf tmo:actualTime ;
  rdfs:subPropertyOf tmo:endTime ;
.
tmo:actualStartTime
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:domain tmo:Task ;
  rdfs:label "actualStartTime" ;
  rdfs:range xsd:dateTime ;
  rdfs:subPropertyOf tmo:actualTime ;
  rdfs:subPropertyOf tmo:startTime ;
.
tmo:actualTime
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:label "actualTime" ;
  rdfs:range xsd:dateTime ;
  rdfs:subPropertyOf tmo:dateTime ;
.
tmo:attachment
  rdf:type rdf:Property ;
  nrl:inverseProperty tmo:attachmentTask ;
  rdfs:comment "connects a Task with an Attachment object. Attachments are associations of Things." ;
  rdfs:domain tmo:Task ;
  rdfs:label "attachment" ;
  rdfs:range tmo:Attachment ;
.
tmo:attachmentReference
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  nrl:minCardinality "1" ;
  rdfs:domain tmo:Attachment ;
  rdfs:label "attachmentReference" ;
  rdfs:range rdfs:Resource ;
  rdfs:subPropertyOf pimo:associationMember ;
.
tmo:attachmentRole
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:domain tmo:Attachment ;
  rdfs:label "attachmentRole" ;
  rdfs:range tmo:AttachmentRole ;
  rdfs:subPropertyOf tmo:stateTypeRole ;
.
tmo:attachmentTask
  rdf:type rdf:Property ;
  nrl:inverseProperty tmo:attachment ;
  nrl:maxCardinality "1" ;
  rdfs:comment "Inverse of attachment, connects an Attachment Association to the associated Task. Is required for every instance of Attachment." ;
  rdfs:domain tmo:Attachment ;
  rdfs:label "attachmentTask" ;
  rdfs:range tmo:Task ;
  rdfs:subPropertyOf pimo:associationMember ;
.
tmo:containsTask
  rdf:type rdf:Property ;
  rdfs:domain tmo:TaskContainer ;
  rdfs:label "containsTask" ;
  rdfs:range tmo:Task ;
  rdfs:subPropertyOf pimo:hasPart ;
.
tmo:contextTask
  rdf:type rdf:Property ;
  nrl:inverseProperty tmo:contextThread ;
  nrl:maxCardinality "1" ;
  rdfs:label "contextTask" ;
  rdfs:range tmo:Task ;
.
tmo:contextThread
  rdf:type rdf:Property ;
  nrl:inverseProperty tmo:contextTask ;
  nrl:maxCardinality "1" ;
  rdfs:domain tmo:Task ;
  rdfs:label "contextThread" ;
  rdfs:range <http://ontologies.opendfki.de/repos/ontologies/wcon/workcontext#MediumTermContextThread> ;
.
tmo:createdBy
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:domain tmo:Attachment ;
  rdfs:label "createdBy" ;
  rdfs:range pimo:Person ;
.
tmo:dateTime
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:comment "dateTime subsumes various properties with Range XMLSchema:dateTime. If possible they are further grouped by \"abstract\" properties." ;
  rdfs:label "dateTime" ;
  rdfs:range xsd:dateTime ;
.
tmo:delegability
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:domain tmo:Task ;
  rdfs:label "delegability" ;
  rdfs:range tmo:Delegability ;
  rdfs:subPropertyOf tmo:timemanagement ;
.
tmo:dependency
  rdf:type rdf:Property ;
  rdfs:domain tmo:Task ;
  rdfs:label "dependency" ;
  rdfs:range tmo:TaskDependency ;
.
tmo:dependencyDescription
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:comment "Endusers can clarify why they created a depedency." ;
  rdfs:domain tmo:TaskDependency ;
  rdfs:label "dependencyDescription" ;
  rdfs:subPropertyOf nao:description ;
.
tmo:dependencyMemberA
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  nrl:minCardinality "1" ;
  rdfs:comment "The semantic of this relation is defined in the sublclass of undirected Dependency on which this property is stated. (The subject of the statment where this property is expressed)" ;
  rdfs:domain tmo:TaskDependency ;
  rdfs:label "dependencyMemberA" ;
  rdfs:range tmo:Task ;
  rdfs:subPropertyOf pimo:associationMember ;
  rdfs:subPropertyOf tmo:taskReference ;
.
tmo:dependencyMemberB
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  nrl:minCardinality "1" ;
  rdfs:comment "The semantic of this relation is defined in the sublclass of undirected Dependency on which this property is stated. (The subject of the statment where this property is expressed)" ;
  rdfs:domain tmo:TaskDependency ;
  rdfs:label "dependencyMemberB" ;
  rdfs:range tmo:Task ;
  rdfs:subPropertyOf pimo:associationMember ;
  rdfs:subPropertyOf tmo:taskReference ;
.
tmo:dependencyOrderNumber
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  nrl:minCardinality "1" ;
  rdfs:domain tmo:TaskDependency ;
  rdfs:label "dependencyOrderNumber" ;
  rdfs:range xsd:int ;
.
tmo:dependencyType
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  nrl:minCardinality "1" ;
  rdfs:label "dependencyType" ;
  rdfs:range rdfs:Resource ;
.
tmo:dueDate
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:domain tmo:Task ;
  rdfs:label "dueDate" ;
  rdfs:range xsd:dateTime ;
  rdfs:subPropertyOf pimo:taskDueTime ;
  rdfs:subPropertyOf tmo:dateTime ;
.
tmo:endTime
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:label "endTime" ;
  rdfs:range xsd:dateTime ;
  rdfs:subPropertyOf tmo:dateTime ;
.
tmo:importance
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:domain tmo:Task ;
  rdfs:label "importance" ;
  rdfs:range tmo:Importance ;
  rdfs:subPropertyOf tmo:timemanagement ;
.
tmo:indexPosition
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:domain tmo:Task ;
  rdfs:label "indexPosition" ;
  rdfs:range rdfs:Literal ;
.
tmo:involvedPerson
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  nrl:minCardinality "1" ;
  rdfs:domain tmo:PersonInvolvement ;
  rdfs:label "involvedPerson" ;
  rdfs:range pimo:Person ;
  rdfs:subPropertyOf pimo:associationMember ;
.
tmo:involvedPersonRole
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  nrl:minCardinality "1" ;
  rdfs:domain tmo:PersonInvolvement ;
  rdfs:label "involvedPersonRole" ;
  rdfs:range tmo:PersonInvolvementRole ;
  rdfs:subPropertyOf tmo:stateTypeRole ;
.
tmo:involvedPersonTask
  rdf:type rdf:Property ;
  nrl:inverseProperty tmo:involvedPersons ;
  nrl:maxCardinality "1" ;
  rdfs:domain tmo:PersonInvolvement ;
  rdfs:label "involvedPersonTask" ;
  rdfs:range tmo:Task ;
  rdfs:subPropertyOf pimo:associationMember ;
.
tmo:involvedPersons
  rdf:type rdf:Property ;
  nrl:inverseProperty tmo:involvedPersonTask ;
  rdfs:domain tmo:Task ;
  rdfs:label "involvedPersons" ;
  rdfs:range tmo:PersonInvolvement ;
.
tmo:lastReviewDate
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:domain tmo:Task ;
  rdfs:label "lastReviewDate" ;
  rdfs:range xsd:dateTime ;
  rdfs:subPropertyOf tmo:dateTime ;
.
tmo:logEntry
  rdf:type rdf:Property ;
  rdfs:domain tmo:Task ;
  rdfs:label "logEntry" ;
  rdfs:range rdfs:Resource ;
.
tmo:nextReviewIntervall
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:domain tmo:Task ;
  rdfs:label "nextReviewIntervall" ;
  rdfs:range xsd:integer ;
.
tmo:priority
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:domain tmo:Task ;
  rdfs:label "priority" ;
  rdfs:range tmo:Priority ;
  rdfs:subPropertyOf tmo:timemanagement ;
.
tmo:progress
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:label "progress" ;
  rdfs:range rdfs:Literal ;
.
tmo:receiveDateTime
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:domain tmo:TaskTransmission ;
  rdfs:label "receiveDateTime" ;
  rdfs:range xsd:dateTime ;
  rdfs:subPropertyOf tmo:dateTime ;
.
tmo:sendDateTime
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:domain tmo:TaskTransmission ;
  rdfs:label "sendDateTime" ;
  rdfs:range xsd:dateTime ;
  rdfs:subPropertyOf tmo:dateTime ;
.
tmo:startTime
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:label "startTime" ;
  rdfs:range xsd:dateTime ;
  rdfs:subPropertyOf tmo:dateTime ;
.
tmo:stateTypeRole
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:label "stateTypeRole" ;
  rdfs:range rdfs:Resource ;
.
tmo:subTask
  rdf:type rdf:Property ;
  nrl:inverseProperty tmo:superTask ;
  rdfs:domain tmo:Task ;
  rdfs:label "subTask" ;
  rdfs:range tmo:Task ;
  rdfs:subPropertyOf pimo:hasPart ;
.
tmo:subTaskOrdering
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:comment "Ordering of the subtasks listed in the tmo:subTasks property of this Task. This is only for ordering/sorting in GUIs, the semantic relation is defined in subTasks, and if this and subTasks differ, subTasks is the correct list." ;
  rdfs:domain tmo:Task ;
  rdfs:label "subTaskOrdering" ;
  rdfs:range rdf:List ;
.
tmo:superTask
  rdf:type rdf:Property ;
  nrl:inverseProperty tmo:subTask ;
  nrl:maxCardinality "1" ;
  rdfs:domain tmo:Task ;
  rdfs:label "superTask" ;
  rdfs:range tmo:Task ;
  rdfs:subPropertyOf pimo:partOf ;
  rdfs:subPropertyOf tmo:taskReference ;
.
tmo:targetCompletion
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:domain tmo:Task ;
  rdfs:label "targetCompletion" ;
  rdfs:range rdfs:Literal ;
  rdfs:subPropertyOf tmo:progress ;
.
tmo:targetEndTime
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:domain tmo:Task ;
  rdfs:label "targetEndTime" ;
  rdfs:range xsd:dateTime ;
  rdfs:subPropertyOf tmo:endTime ;
  rdfs:subPropertyOf tmo:targetTime ;
.
tmo:targetStartTime
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:domain tmo:Task ;
  rdfs:label "targetStartTime" ;
  rdfs:range xsd:dateTime ;
  rdfs:subPropertyOf tmo:startTime ;
  rdfs:subPropertyOf tmo:targetTime ;
.
tmo:targetTime
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:label "targetTime" ;
  rdfs:range xsd:dateTime ;
  rdfs:subPropertyOf tmo:dateTime ;
.
tmo:taskDescription
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:comment """The task description helps users to understand the goal and the proceeding of a task. It can also describe the context of a task. The task description is composed at minimum of a summary of what is done to reach the goal. The task description is the main source for identifying related information, e.g., suitable patterns.
A Task Description can be either an informal, described textual content (TextualDescription) or it can be a more formally structured representation (FormalDescription).
Technology considerations: Informal descriptions allow for text similarity processing, a formal description allows for applying case based similarity measures.""" ;
  rdfs:domain tmo:Task ;
  rdfs:label "taskDescription" ;
  rdfs:subPropertyOf nao:description ;
.
tmo:taskGoal
  rdf:type rdf:Property ;
  rdfs:domain tmo:Task ;
  rdfs:label "taskGoal" ;
  rdfs:range rdfs:Resource ;
.
tmo:taskId
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  nrl:minCardinality "1" ;
  rdfs:comment """The Task Identifier allows a unique identification of a task object within the range of all Nepomuk objects.
The Task Identifier is automatically generated during the creation of a task. The generation of identifiers (IDs) is a Nepomuk architecture issue (Wp2000/WP6000).""" ;
  rdfs:domain tmo:Task ;
  rdfs:label "taskId" ;
  rdfs:range rdfs:Literal ;
.
tmo:taskName
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:comment "The Task Name helps the user to identify a task in a list. It should be expressive enough to give a meaningful recognition. Details should be written in the description attribute instead. A name attribute is not allowed to contain line breaks." ;
  rdfs:domain tmo:Task ;
  rdfs:label "taskName" ;
  rdfs:range rdfs:Literal ;
  rdfs:subPropertyOf nao:prefLabel ;
.
tmo:taskPrivacyState
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:comment """For the separation between professional and private purpose of a task, this attribute provides with the values \"professional/private\" a high level separation of privacy in terms of setting distribution rights to other users for the task.
This separation may arise as a general Nepomuk issue and may therefore be handled in conjunction with a privacy preserving SSD architecture.""" ;
  rdfs:domain tmo:Task ;
  rdfs:label "taskPrivacyState" ;
  rdfs:range tmo:TaskPrivacyState ;
  rdfs:subPropertyOf tmo:stateTypeRole ;
.
tmo:taskReference
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:domain tmo:Task ;
  rdfs:label "taskReference" ;
  rdfs:range tmo:Task ;
.
tmo:taskSource
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:comment "here can be stated from which sources a task was derived. e.g from another task or from an task pattern" ;
  rdfs:domain tmo:Task ;
  rdfs:label "taskSource" ;
  rdfs:range rdfs:Resource ;
  rdfs:subPropertyOf tmo:taskReference ;
.
tmo:taskState
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  nrl:minCardinality "1" ;
  rdfs:comment "The task state describes the current state of the task as described in Section 5.2.7." ;
  rdfs:domain tmo:Task ;
  rdfs:label "taskState" ;
  rdfs:range tmo:TaskState ;
  rdfs:subPropertyOf tmo:stateTypeRole ;
.
tmo:taskStateChangesFrom
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:domain tmo:TaskState ;
  rdfs:label "taskStateChangesFrom" ;
  rdfs:range tmo:TaskState ;
  rdfs:subPropertyOf tmo:stateTypeRole ;
.
tmo:taskStateChangesTo
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:domain tmo:TaskState ;
  rdfs:label "taskStateChangesTo" ;
  rdfs:range tmo:TaskState ;
  rdfs:subPropertyOf tmo:stateTypeRole ;
.
tmo:taskTransmission
  rdf:type rdf:Property ;
  nrl:inverseProperty tmo:transmissionTask ;
  rdfs:domain tmo:Task ;
  rdfs:label "taskTransmission" ;
  rdfs:range tmo:TaskTransmission ;
.
tmo:timemanagement
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:label "timemanagement" ;
  rdfs:range rdfs:Literal ;
.
tmo:transmissionFrom
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  nrl:minCardinality "1" ;
  rdfs:domain tmo:TaskTransmission ;
  rdfs:label "transmissionFrom" ;
  rdfs:range pimo:Person ;
.
tmo:transmissionState
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  nrl:minCardinality "1" ;
  rdfs:domain tmo:TaskTransmission ;
  rdfs:label "transmissionState" ;
  rdfs:range tmo:TransmissionState ;
  rdfs:subPropertyOf tmo:stateTypeRole ;
.
tmo:transmissionStateChangesFrom
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:domain tmo:TransmissionState ;
  rdfs:label "transmissionStateChangesFrom" ;
  rdfs:range tmo:TransmissionState ;
  rdfs:subPropertyOf tmo:stateTypeRole ;
.
tmo:transmissionStateChangesTo
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:domain tmo:TransmissionState ;
  rdfs:label "transmissionStateChangesTo" ;
  rdfs:range tmo:TransmissionState ;
  rdfs:subPropertyOf tmo:stateTypeRole ;
.
tmo:transmissionTask
  rdf:type rdf:Property ;
  nrl:inverseProperty tmo:taskTransmission ;
  nrl:maxCardinality "1" ;
  nrl:minCardinality "1" ;
  rdfs:domain tmo:TaskTransmission ;
  rdfs:label "transmissionTask" ;
  rdfs:range tmo:Task ;
  rdfs:subPropertyOf tmo:taskReference ;
.
tmo:transmissionTo
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  nrl:minCardinality "1" ;
  rdfs:domain tmo:TaskTransmission ;
  rdfs:label "transmissionTo" ;
  rdfs:range pimo:Person ;
.
tmo:transmissionType
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  nrl:minCardinality "1" ;
  rdfs:domain tmo:TaskTransmission ;
  rdfs:label "transmissionType" ;
  rdfs:range tmo:TransmissionType ;
  rdfs:subPropertyOf tmo:stateTypeRole ;
.
tmo:urgency
  rdf:type rdf:Property ;
  nrl:maxCardinality "1" ;
  rdfs:domain tmo:Task ;
  rdfs:label "urgency" ;
  rdfs:range tmo:Urgency ;
  rdfs:subPropertyOf tmo:timemanagement ;
.
<http://www.semanticdesktop.org/ontologies/2008/05/20/tmo/v1.1/>
  rdf:type owl:Ontology ;
.

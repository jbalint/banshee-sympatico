:- iriprefix{nao='http://www.semanticdesktop.org/ontologies/2007/08/15/nao#'}.
:- iriprefix{nrl='http://www.semanticdesktop.org/ontologies/2007/08/15/nrl#'}.
:- iriprefix{owl='http://www.w3.org/2002/07/owl#'}.
:- iriprefix{pimo='http://www.semanticdesktop.org/ontologies/2007/11/01/pimo#'}.
:- iriprefix{protege='http://protege.stanford.edu/system#'}.
:- iriprefix{rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#'}.
:- iriprefix{rdfs='http://www.w3.org/2000/01/rdf-schema#'}.
:- iriprefix{tmo='http://www.semanticdesktop.org/ontologies/2008/05/20/tmo#'}.
:- iriprefix{xsd='http://www.w3.org/2001/XMLSchema#'}.

tmo#AbilityCarrier[rdf#type -> rdfs#Class].
tmo#AbilityCarrier[protege#role -> "abstract"^^xsd#string].
tmo#AbilityCarrier[rdfs#comment -> "AbilityCarrier is an abstract class which circumferences all entities which can take action or which are somehow involved in tasks.
This is in other task conceptualizations rather named \"actor\". But here it is named AbilityCarrier because it is not neccessarily \"active\".

The execution of a task relies on certain abilities. The abstract concept of
Abilitiy_Carriers circumference all those more concrete concepts
of which one can think of while working on tasks. Using this abstract
class enables to substitute such Ability Carrier's in the process of
generating patterns from task instances and vice versa in the process of
instantiating task instances from patterns without violating the schema.
With this attribute, a series of ability carrying entities (Person, Role,
Skill, OrganizationalUnit, InformalDescribedAbility)
and the role of involvement (required, request, used) is enabled. The role
hereby allows specifying how the ability carrying entity is or was
involved."^^xsd#string].
tmo#AbilityCarrier[rdfs#label -> "AbilityCarrier"^^xsd#string].
tmo#AbilityCarrier[rdfs#subClassOf -> rdfs#Resource].

tmo#AbilityCarrierInvolvement[rdf#type -> rdfs#Class].
tmo#AbilityCarrierInvolvement[rdfs#comment -> "The class AbilityCarrier_Involvement ties together an AbilityCarrier with an AbilityCarrier_Role. This is a role based modelling approach. An n-ary relation is realized."^^xsd#string].
tmo#AbilityCarrierInvolvement[rdfs#label -> "AbilityCarrierInvolvement"^^xsd#string].
tmo#AbilityCarrierInvolvement[rdfs#subClassOf -> pimo#Association].
tmo#AbilityCarrierInvolvement[rdfs#subClassOf -> rdfs#Resource].

tmo#AbilityCarrierRole[rdf#type -> rdfs#Class].
tmo#AbilityCarrierRole[rdfs#comment -> "Examples instances  of AbilityCarrirRoles are e.g. \"requested\", \"required\" and \"used\" which further specify the type a person was involved in."^^xsd#string].
tmo#AbilityCarrierRole[rdfs#label -> "AbilityCarrierRole"^^xsd#string].
tmo#AbilityCarrierRole[rdfs#subClassOf -> tmo#StateTypeRole].

tmo#AgentAbilityCarrier[rdf#type -> rdfs#Class].
tmo#AgentAbilityCarrier[protege#role -> "abstract"^^xsd#string].
tmo#AgentAbilityCarrier[rdfs#label -> "AgentAbilityCarrier"^^xsd#string].
tmo#AgentAbilityCarrier[rdfs#subClassOf -> tmo#AbilityCarrier].

tmo#AssociationDependency[rdf#type -> rdfs#Class].
tmo#AssociationDependency[rdfs#label -> "AssociationDependency"^^xsd#string].
tmo#AssociationDependency[rdfs#subClassOf -> tmo#UndirectedDependency].

tmo#Attachment[rdf#type -> rdfs#Class].
tmo#Attachment[rdfs#comment -> "By means of attachments, references to other resources can be established. Resources are information objects. Every Thing, which can be referenced, on the SSD is an information object. In contrast to the usual SSD references/associations, here additionally information can be specified. Further metadata about the role an attachment plays can be stated by means of instances of AttachmentRole. It can be expressed what the Role of attachment is e.g., regarding \"desired/requested\" or \"required\" or \"potentially useful / somehow related\" or \"used/produced/achieved\". The reference property models the actual link to the attached piece of information."^^xsd#string].
tmo#Attachment[rdfs#label -> "Attachment"^^xsd#string].
tmo#Attachment[rdfs#subClassOf -> pimo#Association].
tmo#Attachment[rdfs#subClassOf -> rdfs#Resource].

tmo#AttachmentRole[rdf#type -> rdfs#Class].
tmo#AttachmentRole[rdfs#comment -> "AttachmentRoles further specify the type of how an attachment relates to a task. Example instances  of AttachmentRoles are e.g. \"desired_request\", \"required\" and \"used\"."^^xsd#string].
tmo#AttachmentRole[rdfs#label -> "AttachmentRole"^^xsd#string].
tmo#AttachmentRole[rdfs#subClassOf -> tmo#StateTypeRole].

tmo#Delegability[rdf#type -> rdfs#Class].
tmo#Delegability[rdfs#label -> "Delegability"^^xsd#string].
tmo#Delegability[rdfs#subClassOf -> tmo#StateTypeRole].

tmo#Importance[rdf#type -> rdfs#Class].
tmo#Importance[rdfs#label -> "Importance"^^xsd#string].
tmo#Importance[rdfs#subClassOf -> tmo#StateTypeRole].

tmo#Interdependence[rdf#type -> rdfs#Class].
tmo#Interdependence[rdfs#label -> "Interdependence"^^xsd#string].
tmo#Interdependence[rdfs#subClassOf -> tmo#UndirectedDependency].

tmo#PersonInvolvement[rdf#type -> rdfs#Class].
tmo#PersonInvolvement[rdfs#comment -> "PersonInvolvement  realizes n-ary associations to Persons which are realtedd to an task. The involvement is further characterized by an PersonTaskRole."^^xsd#string].
tmo#PersonInvolvement[rdfs#label -> "PersonInvolvement"^^xsd#string].
tmo#PersonInvolvement[rdfs#subClassOf -> pimo#Association].
tmo#PersonInvolvement[rdfs#subClassOf -> rdfs#Resource].

tmo#PersonInvolvementRole[rdf#type -> rdfs#Class].
tmo#PersonInvolvementRole[rdfs#comment -> "They further specify the type a person was related to an task.
Examples instances  of AttachmentRoles are e.g."^^xsd#string].
tmo#PersonInvolvementRole[rdfs#label -> "PersonInvolvementRole"^^xsd#string].
tmo#PersonInvolvementRole[rdfs#subClassOf -> tmo#StateTypeRole].

tmo#PredecessorDependency[rdf#type -> rdfs#Class].
tmo#PredecessorDependency[rdfs#comment -> "In a  PredecessorDependency the dependencyMemberA is the task which is to be executed before dependencyMemberB."^^xsd#string].
tmo#PredecessorDependency[rdfs#label -> "PredecessorDependency"^^xsd#string].
tmo#PredecessorDependency[rdfs#subClassOf -> tmo#PredecessorSuccessorDependency].

tmo#PredecessorSuccessorDependency[rdf#type -> rdfs#Class].
tmo#PredecessorSuccessorDependency[protege#role -> "abstract"^^xsd#string].
tmo#PredecessorSuccessorDependency[rdfs#comment -> "The PredecessorSuccessorDependency enables a directed relation between task. By means of the concrete sublcasses one can further distinguish from which point of view this relation is created."^^xsd#string].
tmo#PredecessorSuccessorDependency[rdfs#label -> "PredecessorSuccessorDependency"^^xsd#string].
tmo#PredecessorSuccessorDependency[rdfs#subClassOf -> tmo#TaskDependency].

tmo#Priority[rdf#type -> rdfs#Class].
tmo#Priority[rdfs#label -> "Priority"^^xsd#string].
tmo#Priority[rdfs#subClassOf -> tmo#StateTypeRole].

tmo#Role[rdf#type -> rdfs#Class].
tmo#Role[rdfs#comment -> "examples: Architect, Developer, ..."^^xsd#string].
tmo#Role[rdfs#label -> "Role"^^xsd#string].
tmo#Role[rdfs#subClassOf -> tmo#AbilityCarrier].

tmo#SimilarityDependence[rdf#type -> rdfs#Class].
tmo#SimilarityDependence[rdfs#label -> "SimilarityDependence"^^xsd#string].
tmo#SimilarityDependence[rdfs#subClassOf -> tmo#UndirectedDependency].

tmo#Skill[rdf#type -> rdfs#Class].
tmo#Skill[rdfs#comment -> "examples are e.g. technologies like Java, XML,  ..."^^xsd#string].
tmo#Skill[rdfs#label -> "Skill"^^xsd#string].
tmo#Skill[rdfs#subClassOf -> tmo#AbilityCarrier].

tmo#StateTypeRole[rdf#type -> rdfs#Class].
tmo#StateTypeRole[rdfs#comment -> "StateTypeRole is an abstract class which subsumes various other classes which represent \"states\" or roles e.g. in role based modelling conpetualisations."^^xsd#string].
tmo#StateTypeRole[rdfs#label -> "StateTypeRole"^^xsd#string].
tmo#StateTypeRole[rdfs#subClassOf -> rdfs#Resource].

tmo#SuccessorDependency[rdf#type -> rdfs#Class].
tmo#SuccessorDependency[rdfs#comment -> "In a SuccessorrDependency the dependencyMemberA is the task which is to be executed after dependencyMemberB."^^xsd#string].
tmo#SuccessorDependency[rdfs#label -> "SuccessorDependency"^^xsd#string].
tmo#SuccessorDependency[rdfs#subClassOf -> tmo#PredecessorSuccessorDependency].

tmo#SuperSubTaskDependency[rdf#type -> rdfs#Class].
tmo#SuperSubTaskDependency[rdfs#comment -> "By means of the SuperSubTaskDependency one can further describe the subtask-supertask relation .e.g by an descriptin. This enables an n-ary relation between subtask and supertask."^^xsd#string].
tmo#SuperSubTaskDependency[rdfs#label -> "SuperSubTaskDependency"^^xsd#string].
tmo#SuperSubTaskDependency[rdfs#subClassOf -> tmo#TaskDependency].

tmo#TMO_Instance_AbilityCarrierRole_Requested[rdf#type -> tmo#AbilityCarrierRole].
tmo#TMO_Instance_AbilityCarrierRole_Requested[rdfs#label -> "TMO_Instance_AbilityCarrierRole_Requested"^^xsd#string].

tmo#TMO_Instance_AbilityCarrierRole_Required[rdf#type -> tmo#AbilityCarrierRole].
tmo#TMO_Instance_AbilityCarrierRole_Required[rdfs#label -> "TMO_Instance_AbilityCarrierRole_Required"^^xsd#string].

tmo#TMO_Instance_AbilityCarrierRole_Used[rdf#type -> tmo#AbilityCarrierRole].
tmo#TMO_Instance_AbilityCarrierRole_Used[rdfs#label -> "TMO_Instance_AbilityCarrierRole_Used"^^xsd#string].

tmo#TMO_Instance_AttachmentRole_Desired_Requested[rdf#type -> tmo#AttachmentRole].
tmo#TMO_Instance_AttachmentRole_Desired_Requested[rdfs#label -> "TMO_Instance_AttachmentRole_Desired_Requested"^^xsd#string].

tmo#TMO_Instance_AttachmentRole_Related[rdf#type -> tmo#AttachmentRole].
tmo#TMO_Instance_AttachmentRole_Related[rdfs#label -> "TMO_Instance_AttachmentRole_Related"^^xsd#string].

tmo#TMO_Instance_AttachmentRole_Required[rdf#type -> tmo#AttachmentRole].
tmo#TMO_Instance_AttachmentRole_Required[rdfs#label -> "TMO_Instance_AttachmentRole_Required"^^xsd#string].

tmo#TMO_Instance_AttachmentRole_Used[rdf#type -> tmo#AttachmentRole].
tmo#TMO_Instance_AttachmentRole_Used[rdfs#label -> "TMO_Instance_AttachmentRole_Used"^^xsd#string].

tmo#TMO_Instance_Delegability_High[rdf#type -> tmo#Delegability].
tmo#TMO_Instance_Delegability_High[rdfs#label -> "TMO_Instance_Delegability_High"^^xsd#string].

tmo#TMO_Instance_Delegability_Low[rdf#type -> tmo#Delegability].
tmo#TMO_Instance_Delegability_Low[rdfs#label -> "TMO_Instance_Delegability_Low"^^xsd#string].

tmo#TMO_Instance_Delegability_Medium[rdf#type -> tmo#Delegability].
tmo#TMO_Instance_Delegability_Medium[rdfs#label -> "TMO_Instance_Delegability_Medium"^^xsd#string].

tmo#TMO_Instance_Delegability_Never[rdf#type -> tmo#Delegability].
tmo#TMO_Instance_Delegability_Never[rdfs#label -> "TMO_Instance_Delegability_Never"^^xsd#string].

tmo#TMO_Instance_Delegability_Unrestricted[rdf#type -> tmo#Delegability].
tmo#TMO_Instance_Delegability_Unrestricted[rdfs#label -> "TMO_Instance_Delegability_Unrestricted"^^xsd#string].

tmo#TMO_Instance_Importance_01[rdf#type -> tmo#Importance].
tmo#TMO_Instance_Importance_01[rdfs#label -> "TMO_Instance_Importance_01"^^xsd#string].

tmo#TMO_Instance_Importance_02[rdf#type -> tmo#Importance].
tmo#TMO_Instance_Importance_02[rdfs#label -> "TMO_Instance_Importance_02"^^xsd#string].

tmo#TMO_Instance_Importance_03[rdf#type -> tmo#Importance].
tmo#TMO_Instance_Importance_03[rdfs#label -> "TMO_Instance_Importance_03"^^xsd#string].

tmo#TMO_Instance_Importance_04[rdf#type -> tmo#Importance].
tmo#TMO_Instance_Importance_04[rdfs#label -> "TMO_Instance_Importance_04"^^xsd#string].

tmo#TMO_Instance_Importance_05[rdf#type -> tmo#Importance].
tmo#TMO_Instance_Importance_05[rdfs#label -> "TMO_Instance_Importance_05"^^xsd#string].

tmo#TMO_Instance_Importance_06[rdf#type -> tmo#Importance].
tmo#TMO_Instance_Importance_06[rdfs#label -> "TMO_Instance_Importance_06"^^xsd#string].

tmo#TMO_Instance_Importance_07[rdf#type -> tmo#Importance].
tmo#TMO_Instance_Importance_07[rdfs#label -> "TMO_Instance_Importance_07"^^xsd#string].

tmo#TMO_Instance_Importance_08[rdf#type -> tmo#Importance].
tmo#TMO_Instance_Importance_08[rdfs#label -> "TMO_Instance_Importance_08"^^xsd#string].

tmo#TMO_Instance_Importance_09[rdf#type -> tmo#Importance].
tmo#TMO_Instance_Importance_09[rdfs#label -> "TMO_Instance_Importance_09"^^xsd#string].

tmo#TMO_Instance_Importance_10[rdf#type -> tmo#Importance].
tmo#TMO_Instance_Importance_10[rdfs#label -> "TMO_Instance_Importance_10"^^xsd#string].

tmo#TMO_Instance_PersonInvolvementRole_Analyst[rdf#type -> tmo#PersonInvolvementRole].
tmo#TMO_Instance_PersonInvolvementRole_Analyst[rdfs#label -> "TMO_Instance_PersonInvolvementRole_Analyst"^^xsd#string].

tmo#'TMO_Instance_PersonInvolvementRole_Co-worker'[rdf#type -> tmo#PersonInvolvementRole].
tmo#'TMO_Instance_PersonInvolvementRole_Co-worker'[rdfs#label -> "TMO_Instance_PersonInvolvementRole_Co-worker"^^xsd#string].

tmo#TMO_Instance_PersonInvolvementRole_Collaborator[rdf#type -> tmo#PersonInvolvementRole].
tmo#TMO_Instance_PersonInvolvementRole_Collaborator[rdfs#label -> "TMO_Instance_PersonInvolvementRole_Collaborator"^^xsd#string].

tmo#TMO_Instance_PersonInvolvementRole_Controller[rdf#type -> tmo#PersonInvolvementRole].
tmo#TMO_Instance_PersonInvolvementRole_Controller[rdfs#label -> "TMO_Instance_PersonInvolvementRole_Controller"^^xsd#string].

tmo#TMO_Instance_PersonInvolvementRole_Creator[rdf#type -> tmo#PersonInvolvementRole].
tmo#TMO_Instance_PersonInvolvementRole_Creator[rdfs#label -> "TMO_Instance_PersonInvolvementRole_Creator"^^xsd#string].

tmo#TMO_Instance_PersonInvolvementRole_Delegate[rdf#type -> tmo#PersonInvolvementRole].
tmo#TMO_Instance_PersonInvolvementRole_Delegate[rdfs#label -> "TMO_Instance_PersonInvolvementRole_Delegate"^^xsd#string].

tmo#TMO_Instance_PersonInvolvementRole_Executor[rdf#type -> tmo#PersonInvolvementRole].
tmo#TMO_Instance_PersonInvolvementRole_Executor[rdfs#label -> "TMO_Instance_PersonInvolvementRole_Executor"^^xsd#string].

tmo#TMO_Instance_PersonInvolvementRole_ExternalObserver[rdf#type -> tmo#PersonInvolvementRole].
tmo#TMO_Instance_PersonInvolvementRole_ExternalObserver[rdfs#label -> "TMO_Instance_PersonInvolvementRole_ExternalObserver"^^xsd#string].

tmo#TMO_Instance_PersonInvolvementRole_Initiator[rdf#type -> tmo#PersonInvolvementRole].
tmo#TMO_Instance_PersonInvolvementRole_Initiator[rdfs#label -> "TMO_Instance_PersonInvolvementRole_Initiator"^^xsd#string].

tmo#TMO_Instance_PersonInvolvementRole_InternalObserver[rdf#type -> tmo#PersonInvolvementRole].
tmo#TMO_Instance_PersonInvolvementRole_InternalObserver[rdfs#label -> "TMO_Instance_PersonInvolvementRole_InternalObserver"^^xsd#string].

tmo#TMO_Instance_PersonInvolvementRole_Involved[rdf#type -> tmo#PersonInvolvementRole].
tmo#TMO_Instance_PersonInvolvementRole_Involved[rdfs#label -> "TMO_Instance_PersonInvolvementRole_Involved"^^xsd#string].

tmo#TMO_Instance_PersonInvolvementRole_Observer[rdf#type -> tmo#PersonInvolvementRole].
tmo#TMO_Instance_PersonInvolvementRole_Observer[rdfs#label -> "TMO_Instance_PersonInvolvementRole_Observer"^^xsd#string].

tmo#TMO_Instance_PersonInvolvementRole_Owner[rdf#type -> tmo#PersonInvolvementRole].
tmo#TMO_Instance_PersonInvolvementRole_Owner[rdfs#label -> "TMO_Instance_PersonInvolvementRole_Owner"^^xsd#string].

tmo#TMO_Instance_PersonInvolvementRole_Receiver[rdf#type -> tmo#PersonInvolvementRole].
tmo#TMO_Instance_PersonInvolvementRole_Receiver[rdfs#label -> "TMO_Instance_PersonInvolvementRole_Receiver"^^xsd#string].

tmo#TMO_Instance_PersonInvolvementRole_Related[rdf#type -> tmo#PersonInvolvementRole].
tmo#TMO_Instance_PersonInvolvementRole_Related[rdfs#label -> "TMO_Instance_PersonInvolvementRole_Related"^^xsd#string].

tmo#TMO_Instance_PersonInvolvementRole_Reviewer[rdf#type -> tmo#PersonInvolvementRole].
tmo#TMO_Instance_PersonInvolvementRole_Reviewer[rdfs#label -> "TMO_Instance_PersonInvolvementRole_Reviewer"^^xsd#string].

tmo#TMO_Instance_PersonInvolvementRole_Suggested[rdf#type -> tmo#PersonInvolvementRole].
tmo#TMO_Instance_PersonInvolvementRole_Suggested[rdfs#label -> "TMO_Instance_PersonInvolvementRole_Suggested"^^xsd#string].

tmo#TMO_Instance_Priority_High[rdf#type -> tmo#Priority].
tmo#TMO_Instance_Priority_High[rdfs#label -> "TMO_Instance_Priority_High"^^xsd#string].

tmo#TMO_Instance_Priority_Low[rdf#type -> tmo#Priority].
tmo#TMO_Instance_Priority_Low[rdfs#label -> "TMO_Instance_Priority_Low"^^xsd#string].

tmo#TMO_Instance_Priority_Medium[rdf#type -> tmo#Priority].
tmo#TMO_Instance_Priority_Medium[rdfs#label -> "TMO_Instance_Priority_Medium"^^xsd#string].

tmo#TMO_Instance_TaskContainer_activetasks[rdf#type -> tmo#TaskContainer].
tmo#TMO_Instance_TaskContainer_activetasks[rdfs#label -> "TMO_Instance_TaskContainer_activetasks"^^xsd#string].

tmo#TMO_Instance_TaskContainer_archive[rdf#type -> tmo#TaskContainer].
tmo#TMO_Instance_TaskContainer_archive[rdfs#label -> "TMO_Instance_TaskContainer_archive"^^xsd#string].

tmo#TMO_Instance_TaskContainer_inbox[rdf#type -> tmo#TaskContainer].
tmo#TMO_Instance_TaskContainer_inbox[rdfs#label -> "TMO_Instance_TaskContainer_inbox"^^xsd#string].

tmo#TMO_Instance_TaskContainer_outbox[rdf#type -> tmo#TaskContainer].
tmo#TMO_Instance_TaskContainer_outbox[rdfs#label -> "TMO_Instance_TaskContainer_outbox"^^xsd#string].

tmo#TMO_Instance_TaskContainer_trashtasks[rdf#type -> tmo#TaskContainer].
tmo#TMO_Instance_TaskContainer_trashtasks[rdfs#label -> "TMO_Instance_TaskContainer_trashtasks"^^xsd#string].

tmo#TMO_Instance_TaskPrivacy_Private[rdf#type -> tmo#TaskPrivacyState].
tmo#TMO_Instance_TaskPrivacy_Private[rdfs#label -> "TMO_Instance_TaskPrivacy_Private"^^xsd#string].

tmo#TMO_Instance_TaskPrivacy_Professional[rdf#type -> tmo#TaskPrivacyState].
tmo#TMO_Instance_TaskPrivacy_Professional[rdfs#label -> "TMO_Instance_TaskPrivacy_Professional"^^xsd#string].

tmo#TMO_Instance_TaskState_Archived[rdf#type -> tmo#TaskState].
tmo#TMO_Instance_TaskState_Archived[rdfs#label -> "TMO_Instance_TaskState_Archived"^^xsd#string].

tmo#TMO_Instance_TaskState_Completed[rdf#type -> tmo#TaskState].
tmo#TMO_Instance_TaskState_Completed[rdfs#label -> "TMO_Instance_TaskState_Completed"^^xsd#string].

tmo#TMO_Instance_TaskState_Deleted[rdf#type -> tmo#TaskState].
tmo#TMO_Instance_TaskState_Deleted[rdfs#label -> "TMO_Instance_TaskState_Deleted"^^xsd#string].

tmo#TMO_Instance_TaskState_Finalized[rdf#type -> tmo#TaskState].
tmo#TMO_Instance_TaskState_Finalized[rdfs#label -> "TMO_Instance_TaskState_Finalized"^^xsd#string].

tmo#TMO_Instance_TaskState_New[rdf#type -> tmo#TaskState].
tmo#TMO_Instance_TaskState_New[rdfs#label -> "TMO_Instance_TaskState_New"^^xsd#string].

tmo#TMO_Instance_TaskState_Running[rdf#type -> tmo#TaskState].
tmo#TMO_Instance_TaskState_Running[rdfs#label -> "TMO_Instance_TaskState_Running"^^xsd#string].

tmo#TMO_Instance_TaskState_Suspended[rdf#type -> tmo#TaskState].
tmo#TMO_Instance_TaskState_Suspended[rdfs#label -> "TMO_Instance_TaskState_Suspended"^^xsd#string].

tmo#TMO_Instance_TaskState_Terminated[rdf#type -> tmo#TaskState].
tmo#TMO_Instance_TaskState_Terminated[rdfs#label -> "TMO_Instance_TaskState_Terminated"^^xsd#string].

tmo#TMO_Instance_TransmissionState_Accepted_NotTransmitted[rdf#type -> tmo#TransmissionState].
tmo#TMO_Instance_TransmissionState_Accepted_NotTransmitted[rdfs#label -> "TMO_Instance_TransmissionState_Accepted_NotTransmitted"^^xsd#string].

tmo#TMO_Instance_TransmissionState_Accepted_Transmitted[rdf#type -> tmo#TransmissionState].
tmo#TMO_Instance_TransmissionState_Accepted_Transmitted[rdfs#label -> "TMO_Instance_TransmissionState_Accepted_Transmitted"^^xsd#string].

tmo#TMO_Instance_TransmissionState_NotTransmitted[rdf#type -> tmo#TransmissionState].
tmo#TMO_Instance_TransmissionState_NotTransmitted[rdfs#label -> "TMO_Instance_TransmissionState_NotTransmitted"^^xsd#string].

tmo#TMO_Instance_TransmissionState_Rejected_NotTransmitted[rdf#type -> tmo#TransmissionState].
tmo#TMO_Instance_TransmissionState_Rejected_NotTransmitted[rdfs#label -> "TMO_Instance_TransmissionState_Rejected_NotTransmitted"^^xsd#string].

tmo#TMO_Instance_TransmissionState_Rejected_Transmitted[rdf#type -> tmo#TransmissionState].
tmo#TMO_Instance_TransmissionState_Rejected_Transmitted[rdfs#label -> "TMO_Instance_TransmissionState_Rejected_Transmitted"^^xsd#string].

tmo#TMO_Instance_TransmissionState_Transmitted[rdf#type -> tmo#TransmissionState].
tmo#TMO_Instance_TransmissionState_Transmitted[rdfs#label -> "TMO_Instance_TransmissionState_Transmitted"^^xsd#string].

tmo#TMO_Instance_TransmissionType_Delegation[rdf#type -> tmo#TransmissionType].
tmo#TMO_Instance_TransmissionType_Delegation[rdfs#label -> "TMO_Instance_TransmissionType_Delegation"^^xsd#string].

tmo#TMO_Instance_TransmissionType_Join[rdf#type -> tmo#TransmissionType].
tmo#TMO_Instance_TransmissionType_Join[rdfs#label -> "TMO_Instance_TransmissionType_Join"^^xsd#string].

tmo#TMO_Instance_TransmissionType_Transfer[rdf#type -> tmo#TransmissionType].
tmo#TMO_Instance_TransmissionType_Transfer[rdfs#label -> "TMO_Instance_TransmissionType_Transfer"^^xsd#string].

tmo#TMO_Instance_Urgency_01[rdf#type -> tmo#Urgency].
tmo#TMO_Instance_Urgency_01[rdfs#label -> "TMO_Instance_Urgency_01"^^xsd#string].

tmo#TMO_Instance_Urgency_02[rdf#type -> tmo#Urgency].
tmo#TMO_Instance_Urgency_02[rdfs#label -> "TMO_Instance_Urgency_02"^^xsd#string].

tmo#TMO_Instance_Urgency_03[rdf#type -> tmo#Urgency].
tmo#TMO_Instance_Urgency_03[rdfs#label -> "TMO_Instance_Urgency_03"^^xsd#string].

tmo#TMO_Instance_Urgency_04[rdf#type -> tmo#Urgency].
tmo#TMO_Instance_Urgency_04[rdfs#label -> "TMO_Instance_Urgency_04"^^xsd#string].

tmo#TMO_Instance_Urgency_05[rdf#type -> tmo#Urgency].
tmo#TMO_Instance_Urgency_05[rdfs#label -> "TMO_Instance_Urgency_05"^^xsd#string].

tmo#TMO_Instance_Urgency_06[rdf#type -> tmo#Urgency].
tmo#TMO_Instance_Urgency_06[rdfs#label -> "TMO_Instance_Urgency_06"^^xsd#string].

tmo#TMO_Instance_Urgency_07[rdf#type -> tmo#Urgency].
tmo#TMO_Instance_Urgency_07[rdfs#label -> "TMO_Instance_Urgency_07"^^xsd#string].

tmo#TMO_Instance_Urgency_08[rdf#type -> tmo#Urgency].
tmo#TMO_Instance_Urgency_08[rdfs#label -> "TMO_Instance_Urgency_08"^^xsd#string].

tmo#TMO_Instance_Urgency_09[rdf#type -> tmo#Urgency].
tmo#TMO_Instance_Urgency_09[rdfs#label -> "TMO_Instance_Urgency_09"^^xsd#string].

tmo#TMO_Instance_Urgency_10[rdf#type -> tmo#Urgency].
tmo#TMO_Instance_Urgency_10[rdfs#label -> "TMO_Instance_Urgency_10"^^xsd#string].

tmo#Task[rdf#type -> rdfs#Class].
tmo#Task[rdfs#comment -> "The tmo:task is the central entitiey of the tmo. Task can range from vague things to be possibly done in e distant future to concrete things to be done in a precise forseeable manner. It is not unrealisitc to assume that knowledge worker have hundred or more tasks a day."^^xsd#string].
tmo#Task[rdfs#label -> "Task"^^xsd#string].
tmo#Task[rdfs#subClassOf -> pimo#Task].

tmo#TaskContainer[rdf#type -> rdfs#Class].
tmo#TaskContainer[rdfs#label -> "TaskContainer"^^xsd#string].
tmo#TaskContainer[rdfs#subClassOf -> pimo#Collection].

tmo#TaskDependency[rdf#type -> rdfs#Class].
tmo#TaskDependency[protege#role -> "abstract"^^xsd#string].
tmo#TaskDependency[rdfs#comment -> "Between the tasks, further dependencies may exist. These dependencies allow for a graph network structure. For ease of use, dependencies should not be too frequent, otherwise the primarily character of a hierarchy would be diminished and a consequent graph representation would become considerable. However, such a graph representation has other drawbacks, the user is likely to loose oversight, tree structures are more helpful in structuring the work.

A dependency relation is characterized by the type of the relation and by an additional description. There are different possibilities for dependency relations between tasks."^^xsd#string].
tmo#TaskDependency[rdfs#label -> "TaskDependency"^^xsd#string].
tmo#TaskDependency[rdfs#subClassOf -> pimo#Association].
tmo#TaskDependency[rdfs#subClassOf -> rdfs#Resource].

tmo#TaskPrivacyState[rdf#type -> rdfs#Class].
tmo#TaskPrivacyState[rdfs#comment -> "Privacy Status serves for the separation between a professional and a private purpose of a task. This attribute provides with the values \"professional/private\" a high-level separation of privacy in terms of setting distribution and access
rights to other users for the task.
This separation may arise as a general Nepomuk issue and may therefore be handled in conjunction with a privacy preserving SSD architecture."^^xsd#string].
tmo#TaskPrivacyState[rdfs#label -> "TaskPrivacyState"^^xsd#string].
tmo#TaskPrivacyState[rdfs#subClassOf -> tmo#StateTypeRole].

tmo#TaskState[rdf#type -> rdfs#Class].
tmo#TaskState[rdfs#comment -> "The task state property allows tracking a task during its lifecycle. Initially the state is just \"created\". 
The TaskState class was modeled so that for each state can be set which the typical prior and posterior states are. This has the advantage that e.g. a UI can retrieve the allowed states at runtime from the ontology; rather can having this potentially changing knowledge hard coded. But the prior and posterior states are only defaults; the human user is always free to change the state."^^xsd#string].
tmo#TaskState[rdfs#label -> "TaskState"^^xsd#string].
tmo#TaskState[rdfs#subClassOf -> tmo#StateTypeRole].

tmo#TaskTransmission[rdf#type -> rdfs#Class].
tmo#TaskTransmission[rdfs#comment -> "On the SSD, tasks are not restricted to one person and may cross from
the PTM of one person to the PTM of another. With transmission, we
refer to the process of sending a task from one person (sender) to one
or more other persons (receiver(s)) (see Section 5.2.1.3 Task
Transmission). Task delegation and task transfer are two special kinds of
task transmission which are described at the end of this section. In
addition, the collaborative task is realized by task transmission.
For the process of sending a task, some information is required. This
information is also modelled in the task ontology. This information is still
useful after the process of sending a task was completed. Task Delegation is a process where the sender of the task restricts the
access rights of the receiver. This includes the right to distribute further
this task and additionally the obligation to give feedback to the sender.
The person that receives a task by delegation usually has not the full
control about the task. The attributes described in the following section
have the purpose to enable such \"access rights\". The receiver will also
probably have obligations regarding what to report to whom at which
time.
In contrast, the simplest case is that all rights are granted to the receiver
and there is no feedback desired by the sender. What to do with the task
may be apparent by the organization context, or it may be left to the
receiver. This is like sending an email but with the advantage that the
information is transferred in the \"task space\" of the participating persons."^^xsd#string].
tmo#TaskTransmission[rdfs#label -> "TaskTransmission"^^xsd#string].
tmo#TaskTransmission[rdfs#subClassOf -> rdfs#Resource].

tmo#TransmissionState[rdf#type -> rdfs#Class].
tmo#TransmissionState[rdfs#comment -> "States a task can go through during transmission of an task."^^xsd#string].
tmo#TransmissionState[rdfs#label -> "TransmissionState"^^xsd#string].
tmo#TransmissionState[rdfs#subClassOf -> tmo#StateTypeRole].

tmo#TransmissionType[rdf#type -> rdfs#Class].
tmo#TransmissionType[rdfs#comment -> "By means of the TransmissionType one can distinguish several different types which might imply a different business logic. e.g. delegation can mean that the results of the task fulfillment care to be reported back to the sender of the task."^^xsd#string].
tmo#TransmissionType[rdfs#label -> "TransmissionType"^^xsd#string].
tmo#TransmissionType[rdfs#subClassOf -> tmo#StateTypeRole].

tmo#UndirectedDependency[rdf#type -> rdfs#Class].
tmo#UndirectedDependency[rdfs#comment -> "A symmetric relations between task."^^xsd#string].
tmo#UndirectedDependency[rdfs#label -> "UndirectedDependency"^^xsd#string].
tmo#UndirectedDependency[rdfs#subClassOf -> tmo#TaskDependency].

tmo#Urgency[rdf#type -> rdfs#Class].
tmo#Urgency[rdfs#label -> "Urgency"^^xsd#string].
tmo#Urgency[rdfs#subClassOf -> tmo#StateTypeRole].

tmo#abilityCarrier[rdf#type -> rdf#Property].
tmo#abilityCarrier[nrl#maxCardinality -> "1"^^xsd#string].
tmo#abilityCarrier[nrl#minCardinality -> "1"^^xsd#string].
tmo#abilityCarrier[rdfs#domain -> tmo#AbilityCarrierInvolvement].
tmo#abilityCarrier[rdfs#label -> "abilityCarrier"^^xsd#string].
tmo#abilityCarrier[rdfs#range -> tmo#AbilityCarrier].
tmo#abilityCarrier[rdfs#subPropertyOf -> pimo#associationMember].

tmo#abilityCarrierInvolvement[rdf#type -> rdf#Property].
tmo#abilityCarrierInvolvement[nrl#inverseProperty -> tmo#abilityCarrierTask].
tmo#abilityCarrierInvolvement[rdfs#domain -> tmo#Task].
tmo#abilityCarrierInvolvement[rdfs#label -> "abilityCarrierInvolvement"^^xsd#string].
tmo#abilityCarrierInvolvement[rdfs#range -> tmo#AbilityCarrierInvolvement].

tmo#abilityCarrierRole[rdf#type -> rdf#Property].
tmo#abilityCarrierRole[nrl#maxCardinality -> "1"^^xsd#string].
tmo#abilityCarrierRole[nrl#minCardinality -> "1"^^xsd#string].
tmo#abilityCarrierRole[rdfs#domain -> tmo#AbilityCarrierInvolvement].
tmo#abilityCarrierRole[rdfs#label -> "abilityCarrierRole"^^xsd#string].
tmo#abilityCarrierRole[rdfs#range -> tmo#AbilityCarrierRole].
tmo#abilityCarrierRole[rdfs#subPropertyOf -> tmo#stateTypeRole].

tmo#abilityCarrierTask[rdf#type -> rdf#Property].
tmo#abilityCarrierTask[nrl#inverseProperty -> tmo#abilityCarrierInvolvement].
tmo#abilityCarrierTask[nrl#maxCardinality -> "1"^^xsd#string].
tmo#abilityCarrierTask[rdfs#domain -> tmo#AbilityCarrierInvolvement].
tmo#abilityCarrierTask[rdfs#label -> "abilityCarrierTask"^^xsd#string].
tmo#abilityCarrierTask[rdfs#range -> tmo#Task].
tmo#abilityCarrierTask[rdfs#subPropertyOf -> pimo#associationMember].

tmo#actualCompletion[rdf#type -> rdf#Property].
tmo#actualCompletion[nrl#maxCardinality -> "1"^^xsd#string].
tmo#actualCompletion[rdfs#domain -> tmo#Task].
tmo#actualCompletion[rdfs#label -> "actualCompletion"^^xsd#string].
tmo#actualCompletion[rdfs#range -> rdfs#Literal].
tmo#actualCompletion[rdfs#subPropertyOf -> tmo#progress].

tmo#actualEndTime[rdf#type -> rdf#Property].
tmo#actualEndTime[nrl#maxCardinality -> "1"^^xsd#string].
tmo#actualEndTime[rdfs#domain -> tmo#Task].
tmo#actualEndTime[rdfs#label -> "actualEndTime"^^xsd#string].
tmo#actualEndTime[rdfs#range -> xsd#dateTime].
tmo#actualEndTime[rdfs#subPropertyOf -> tmo#actualTime].
tmo#actualEndTime[rdfs#subPropertyOf -> tmo#endTime].

tmo#actualStartTime[rdf#type -> rdf#Property].
tmo#actualStartTime[nrl#maxCardinality -> "1"^^xsd#string].
tmo#actualStartTime[rdfs#domain -> tmo#Task].
tmo#actualStartTime[rdfs#label -> "actualStartTime"^^xsd#string].
tmo#actualStartTime[rdfs#range -> xsd#dateTime].
tmo#actualStartTime[rdfs#subPropertyOf -> tmo#actualTime].
tmo#actualStartTime[rdfs#subPropertyOf -> tmo#startTime].

tmo#actualTime[rdf#type -> rdf#Property].
tmo#actualTime[nrl#maxCardinality -> "1"^^xsd#string].
tmo#actualTime[rdfs#label -> "actualTime"^^xsd#string].
tmo#actualTime[rdfs#range -> xsd#dateTime].
tmo#actualTime[rdfs#subPropertyOf -> tmo#dateTime].

tmo#attachment[rdf#type -> rdf#Property].
tmo#attachment[nrl#inverseProperty -> tmo#attachmentTask].
tmo#attachment[rdfs#comment -> "connects a Task with an Attachment object. Attachments are associations of Things."^^xsd#string].
tmo#attachment[rdfs#domain -> tmo#Task].
tmo#attachment[rdfs#label -> "attachment"^^xsd#string].
tmo#attachment[rdfs#range -> tmo#Attachment].

tmo#attachmentReference[rdf#type -> rdf#Property].
tmo#attachmentReference[nrl#maxCardinality -> "1"^^xsd#string].
tmo#attachmentReference[nrl#minCardinality -> "1"^^xsd#string].
tmo#attachmentReference[rdfs#domain -> tmo#Attachment].
tmo#attachmentReference[rdfs#label -> "attachmentReference"^^xsd#string].
tmo#attachmentReference[rdfs#range -> rdfs#Resource].
tmo#attachmentReference[rdfs#subPropertyOf -> pimo#associationMember].

tmo#attachmentRole[rdf#type -> rdf#Property].
tmo#attachmentRole[nrl#maxCardinality -> "1"^^xsd#string].
tmo#attachmentRole[rdfs#domain -> tmo#Attachment].
tmo#attachmentRole[rdfs#label -> "attachmentRole"^^xsd#string].
tmo#attachmentRole[rdfs#range -> tmo#AttachmentRole].
tmo#attachmentRole[rdfs#subPropertyOf -> tmo#stateTypeRole].

tmo#attachmentTask[rdf#type -> rdf#Property].
tmo#attachmentTask[nrl#inverseProperty -> tmo#attachment].
tmo#attachmentTask[nrl#maxCardinality -> "1"^^xsd#string].
tmo#attachmentTask[rdfs#comment -> "Inverse of attachment, connects an Attachment Association to the associated Task. Is required for every instance of Attachment."^^xsd#string].
tmo#attachmentTask[rdfs#domain -> tmo#Attachment].
tmo#attachmentTask[rdfs#label -> "attachmentTask"^^xsd#string].
tmo#attachmentTask[rdfs#range -> tmo#Task].
tmo#attachmentTask[rdfs#subPropertyOf -> pimo#associationMember].

tmo#containsTask[rdf#type -> rdf#Property].
tmo#containsTask[rdfs#domain -> tmo#TaskContainer].
tmo#containsTask[rdfs#label -> "containsTask"^^xsd#string].
tmo#containsTask[rdfs#range -> tmo#Task].
tmo#containsTask[rdfs#subPropertyOf -> pimo#hasPart].

tmo#contextTask[rdf#type -> rdf#Property].
tmo#contextTask[nrl#inverseProperty -> tmo#contextThread].
tmo#contextTask[nrl#maxCardinality -> "1"^^xsd#string].
tmo#contextTask[rdfs#label -> "contextTask"^^xsd#string].
tmo#contextTask[rdfs#range -> tmo#Task].

tmo#contextThread[rdf#type -> rdf#Property].
tmo#contextThread[nrl#inverseProperty -> tmo#contextTask].
tmo#contextThread[nrl#maxCardinality -> "1"^^xsd#string].
tmo#contextThread[rdfs#domain -> tmo#Task].
tmo#contextThread[rdfs#label -> "contextThread"^^xsd#string].
tmo#contextThread[rdfs#range -> "http://ontologies.opendfki.de/repos/ontologies/wcon/workcontext#MediumTermContextThread"^^\iri].

tmo#createdBy[rdf#type -> rdf#Property].
tmo#createdBy[nrl#maxCardinality -> "1"^^xsd#string].
tmo#createdBy[rdfs#domain -> tmo#Attachment].
tmo#createdBy[rdfs#label -> "createdBy"^^xsd#string].
tmo#createdBy[rdfs#range -> pimo#Person].

tmo#dateTime[rdf#type -> rdf#Property].
tmo#dateTime[nrl#maxCardinality -> "1"^^xsd#string].
tmo#dateTime[rdfs#comment -> "dateTime subsumes various properties with Range XMLSchema:dateTime. If possible they are further grouped by \"abstract\" properties."^^xsd#string].
tmo#dateTime[rdfs#label -> "dateTime"^^xsd#string].
tmo#dateTime[rdfs#range -> xsd#dateTime].

tmo#delegability[rdf#type -> rdf#Property].
tmo#delegability[nrl#maxCardinality -> "1"^^xsd#string].
tmo#delegability[rdfs#domain -> tmo#Task].
tmo#delegability[rdfs#label -> "delegability"^^xsd#string].
tmo#delegability[rdfs#range -> tmo#Delegability].
tmo#delegability[rdfs#subPropertyOf -> tmo#timemanagement].

tmo#dependency[rdf#type -> rdf#Property].
tmo#dependency[rdfs#domain -> tmo#Task].
tmo#dependency[rdfs#label -> "dependency"^^xsd#string].
tmo#dependency[rdfs#range -> tmo#TaskDependency].

tmo#dependencyDescription[rdf#type -> rdf#Property].
tmo#dependencyDescription[nrl#maxCardinality -> "1"^^xsd#string].
tmo#dependencyDescription[rdfs#comment -> "Endusers can clarify why they created a depedency."^^xsd#string].
tmo#dependencyDescription[rdfs#domain -> tmo#TaskDependency].
tmo#dependencyDescription[rdfs#label -> "dependencyDescription"^^xsd#string].
tmo#dependencyDescription[rdfs#subPropertyOf -> nao#description].

tmo#dependencyMemberA[rdf#type -> rdf#Property].
tmo#dependencyMemberA[nrl#maxCardinality -> "1"^^xsd#string].
tmo#dependencyMemberA[nrl#minCardinality -> "1"^^xsd#string].
tmo#dependencyMemberA[rdfs#comment -> "The semantic of this relation is defined in the sublclass of undirected Dependency on which this property is stated. (The subject of the statment where this property is expressed)"^^xsd#string].
tmo#dependencyMemberA[rdfs#domain -> tmo#TaskDependency].
tmo#dependencyMemberA[rdfs#label -> "dependencyMemberA"^^xsd#string].
tmo#dependencyMemberA[rdfs#range -> tmo#Task].
tmo#dependencyMemberA[rdfs#subPropertyOf -> pimo#associationMember].
tmo#dependencyMemberA[rdfs#subPropertyOf -> tmo#taskReference].

tmo#dependencyMemberB[rdf#type -> rdf#Property].
tmo#dependencyMemberB[nrl#maxCardinality -> "1"^^xsd#string].
tmo#dependencyMemberB[nrl#minCardinality -> "1"^^xsd#string].
tmo#dependencyMemberB[rdfs#comment -> "The semantic of this relation is defined in the sublclass of undirected Dependency on which this property is stated. (The subject of the statment where this property is expressed)"^^xsd#string].
tmo#dependencyMemberB[rdfs#domain -> tmo#TaskDependency].
tmo#dependencyMemberB[rdfs#label -> "dependencyMemberB"^^xsd#string].
tmo#dependencyMemberB[rdfs#range -> tmo#Task].
tmo#dependencyMemberB[rdfs#subPropertyOf -> pimo#associationMember].
tmo#dependencyMemberB[rdfs#subPropertyOf -> tmo#taskReference].

tmo#dependencyOrderNumber[rdf#type -> rdf#Property].
tmo#dependencyOrderNumber[nrl#maxCardinality -> "1"^^xsd#string].
tmo#dependencyOrderNumber[nrl#minCardinality -> "1"^^xsd#string].
tmo#dependencyOrderNumber[rdfs#domain -> tmo#TaskDependency].
tmo#dependencyOrderNumber[rdfs#label -> "dependencyOrderNumber"^^xsd#string].
tmo#dependencyOrderNumber[rdfs#range -> xsd#int].

tmo#dependencyType[rdf#type -> rdf#Property].
tmo#dependencyType[nrl#maxCardinality -> "1"^^xsd#string].
tmo#dependencyType[nrl#minCardinality -> "1"^^xsd#string].
tmo#dependencyType[rdfs#label -> "dependencyType"^^xsd#string].
tmo#dependencyType[rdfs#range -> rdfs#Resource].

tmo#dueDate[rdf#type -> rdf#Property].
tmo#dueDate[nrl#maxCardinality -> "1"^^xsd#string].
tmo#dueDate[rdfs#domain -> tmo#Task].
tmo#dueDate[rdfs#label -> "dueDate"^^xsd#string].
tmo#dueDate[rdfs#range -> xsd#dateTime].
tmo#dueDate[rdfs#subPropertyOf -> pimo#taskDueTime].
tmo#dueDate[rdfs#subPropertyOf -> tmo#dateTime].

tmo#endTime[rdf#type -> rdf#Property].
tmo#endTime[nrl#maxCardinality -> "1"^^xsd#string].
tmo#endTime[rdfs#label -> "endTime"^^xsd#string].
tmo#endTime[rdfs#range -> xsd#dateTime].
tmo#endTime[rdfs#subPropertyOf -> tmo#dateTime].

tmo#importance[rdf#type -> rdf#Property].
tmo#importance[nrl#maxCardinality -> "1"^^xsd#string].
tmo#importance[rdfs#domain -> tmo#Task].
tmo#importance[rdfs#label -> "importance"^^xsd#string].
tmo#importance[rdfs#range -> tmo#Importance].
tmo#importance[rdfs#subPropertyOf -> tmo#timemanagement].

tmo#indexPosition[rdf#type -> rdf#Property].
tmo#indexPosition[nrl#maxCardinality -> "1"^^xsd#string].
tmo#indexPosition[rdfs#domain -> tmo#Task].
tmo#indexPosition[rdfs#label -> "indexPosition"^^xsd#string].
tmo#indexPosition[rdfs#range -> rdfs#Literal].

tmo#involvedPerson[rdf#type -> rdf#Property].
tmo#involvedPerson[nrl#maxCardinality -> "1"^^xsd#string].
tmo#involvedPerson[nrl#minCardinality -> "1"^^xsd#string].
tmo#involvedPerson[rdfs#domain -> tmo#PersonInvolvement].
tmo#involvedPerson[rdfs#label -> "involvedPerson"^^xsd#string].
tmo#involvedPerson[rdfs#range -> pimo#Person].
tmo#involvedPerson[rdfs#subPropertyOf -> pimo#associationMember].

tmo#involvedPersonRole[rdf#type -> rdf#Property].
tmo#involvedPersonRole[nrl#maxCardinality -> "1"^^xsd#string].
tmo#involvedPersonRole[nrl#minCardinality -> "1"^^xsd#string].
tmo#involvedPersonRole[rdfs#domain -> tmo#PersonInvolvement].
tmo#involvedPersonRole[rdfs#label -> "involvedPersonRole"^^xsd#string].
tmo#involvedPersonRole[rdfs#range -> tmo#PersonInvolvementRole].
tmo#involvedPersonRole[rdfs#subPropertyOf -> tmo#stateTypeRole].

tmo#involvedPersonTask[rdf#type -> rdf#Property].
tmo#involvedPersonTask[nrl#inverseProperty -> tmo#involvedPersons].
tmo#involvedPersonTask[nrl#maxCardinality -> "1"^^xsd#string].
tmo#involvedPersonTask[rdfs#domain -> tmo#PersonInvolvement].
tmo#involvedPersonTask[rdfs#label -> "involvedPersonTask"^^xsd#string].
tmo#involvedPersonTask[rdfs#range -> tmo#Task].
tmo#involvedPersonTask[rdfs#subPropertyOf -> pimo#associationMember].

tmo#involvedPersons[rdf#type -> rdf#Property].
tmo#involvedPersons[nrl#inverseProperty -> tmo#involvedPersonTask].
tmo#involvedPersons[rdfs#domain -> tmo#Task].
tmo#involvedPersons[rdfs#label -> "involvedPersons"^^xsd#string].
tmo#involvedPersons[rdfs#range -> tmo#PersonInvolvement].

tmo#lastReviewDate[rdf#type -> rdf#Property].
tmo#lastReviewDate[nrl#maxCardinality -> "1"^^xsd#string].
tmo#lastReviewDate[rdfs#domain -> tmo#Task].
tmo#lastReviewDate[rdfs#label -> "lastReviewDate"^^xsd#string].
tmo#lastReviewDate[rdfs#range -> xsd#dateTime].
tmo#lastReviewDate[rdfs#subPropertyOf -> tmo#dateTime].

tmo#logEntry[rdf#type -> rdf#Property].
tmo#logEntry[rdfs#domain -> tmo#Task].
tmo#logEntry[rdfs#label -> "logEntry"^^xsd#string].
tmo#logEntry[rdfs#range -> rdfs#Resource].

tmo#nextReviewIntervall[rdf#type -> rdf#Property].
tmo#nextReviewIntervall[nrl#maxCardinality -> "1"^^xsd#string].
tmo#nextReviewIntervall[rdfs#domain -> tmo#Task].
tmo#nextReviewIntervall[rdfs#label -> "nextReviewIntervall"^^xsd#string].
tmo#nextReviewIntervall[rdfs#range -> xsd#integer].

tmo#priority[rdf#type -> rdf#Property].
tmo#priority[nrl#maxCardinality -> "1"^^xsd#string].
tmo#priority[rdfs#domain -> tmo#Task].
tmo#priority[rdfs#label -> "priority"^^xsd#string].
tmo#priority[rdfs#range -> tmo#Priority].
tmo#priority[rdfs#subPropertyOf -> tmo#timemanagement].

tmo#progress[rdf#type -> rdf#Property].
tmo#progress[nrl#maxCardinality -> "1"^^xsd#string].
tmo#progress[rdfs#label -> "progress"^^xsd#string].
tmo#progress[rdfs#range -> rdfs#Literal].

tmo#receiveDateTime[rdf#type -> rdf#Property].
tmo#receiveDateTime[nrl#maxCardinality -> "1"^^xsd#string].
tmo#receiveDateTime[rdfs#domain -> tmo#TaskTransmission].
tmo#receiveDateTime[rdfs#label -> "receiveDateTime"^^xsd#string].
tmo#receiveDateTime[rdfs#range -> xsd#dateTime].
tmo#receiveDateTime[rdfs#subPropertyOf -> tmo#dateTime].

tmo#sendDateTime[rdf#type -> rdf#Property].
tmo#sendDateTime[nrl#maxCardinality -> "1"^^xsd#string].
tmo#sendDateTime[rdfs#domain -> tmo#TaskTransmission].
tmo#sendDateTime[rdfs#label -> "sendDateTime"^^xsd#string].
tmo#sendDateTime[rdfs#range -> xsd#dateTime].
tmo#sendDateTime[rdfs#subPropertyOf -> tmo#dateTime].

tmo#startTime[rdf#type -> rdf#Property].
tmo#startTime[nrl#maxCardinality -> "1"^^xsd#string].
tmo#startTime[rdfs#label -> "startTime"^^xsd#string].
tmo#startTime[rdfs#range -> xsd#dateTime].
tmo#startTime[rdfs#subPropertyOf -> tmo#dateTime].

tmo#stateTypeRole[rdf#type -> rdf#Property].
tmo#stateTypeRole[nrl#maxCardinality -> "1"^^xsd#string].
tmo#stateTypeRole[rdfs#label -> "stateTypeRole"^^xsd#string].
tmo#stateTypeRole[rdfs#range -> rdfs#Resource].

tmo#subTask[rdf#type -> rdf#Property].
tmo#subTask[nrl#inverseProperty -> tmo#superTask].
tmo#subTask[rdfs#domain -> tmo#Task].
tmo#subTask[rdfs#label -> "subTask"^^xsd#string].
tmo#subTask[rdfs#range -> tmo#Task].
tmo#subTask[rdfs#subPropertyOf -> pimo#hasPart].

tmo#subTaskOrdering[rdf#type -> rdf#Property].
tmo#subTaskOrdering[nrl#maxCardinality -> "1"^^xsd#string].
tmo#subTaskOrdering[rdfs#comment -> "Ordering of the subtasks listed in the tmo:subTasks property of this Task. This is only for ordering/sorting in GUIs, the semantic relation is defined in subTasks, and if this and subTasks differ, subTasks is the correct list."^^xsd#string].
tmo#subTaskOrdering[rdfs#domain -> tmo#Task].
tmo#subTaskOrdering[rdfs#label -> "subTaskOrdering"^^xsd#string].
tmo#subTaskOrdering[rdfs#range -> rdf#List].

tmo#superTask[rdf#type -> rdf#Property].
tmo#superTask[nrl#inverseProperty -> tmo#subTask].
tmo#superTask[nrl#maxCardinality -> "1"^^xsd#string].
tmo#superTask[rdfs#domain -> tmo#Task].
tmo#superTask[rdfs#label -> "superTask"^^xsd#string].
tmo#superTask[rdfs#range -> tmo#Task].
tmo#superTask[rdfs#subPropertyOf -> pimo#partOf].
tmo#superTask[rdfs#subPropertyOf -> tmo#taskReference].

tmo#targetCompletion[rdf#type -> rdf#Property].
tmo#targetCompletion[nrl#maxCardinality -> "1"^^xsd#string].
tmo#targetCompletion[rdfs#domain -> tmo#Task].
tmo#targetCompletion[rdfs#label -> "targetCompletion"^^xsd#string].
tmo#targetCompletion[rdfs#range -> rdfs#Literal].
tmo#targetCompletion[rdfs#subPropertyOf -> tmo#progress].

tmo#targetEndTime[rdf#type -> rdf#Property].
tmo#targetEndTime[nrl#maxCardinality -> "1"^^xsd#string].
tmo#targetEndTime[rdfs#domain -> tmo#Task].
tmo#targetEndTime[rdfs#label -> "targetEndTime"^^xsd#string].
tmo#targetEndTime[rdfs#range -> xsd#dateTime].
tmo#targetEndTime[rdfs#subPropertyOf -> tmo#endTime].
tmo#targetEndTime[rdfs#subPropertyOf -> tmo#targetTime].

tmo#targetStartTime[rdf#type -> rdf#Property].
tmo#targetStartTime[nrl#maxCardinality -> "1"^^xsd#string].
tmo#targetStartTime[rdfs#domain -> tmo#Task].
tmo#targetStartTime[rdfs#label -> "targetStartTime"^^xsd#string].
tmo#targetStartTime[rdfs#range -> xsd#dateTime].
tmo#targetStartTime[rdfs#subPropertyOf -> tmo#startTime].
tmo#targetStartTime[rdfs#subPropertyOf -> tmo#targetTime].

tmo#targetTime[rdf#type -> rdf#Property].
tmo#targetTime[nrl#maxCardinality -> "1"^^xsd#string].
tmo#targetTime[rdfs#label -> "targetTime"^^xsd#string].
tmo#targetTime[rdfs#range -> xsd#dateTime].
tmo#targetTime[rdfs#subPropertyOf -> tmo#dateTime].

tmo#taskDescription[rdf#type -> rdf#Property].
tmo#taskDescription[nrl#maxCardinality -> "1"^^xsd#string].
tmo#taskDescription[rdfs#comment -> "The task description helps users to understand the goal and the proceeding of a task. It can also describe the context of a task. The task description is composed at minimum of a summary of what is done to reach the goal. The task description is the main source for identifying related information, e.g., suitable patterns.
A Task Description can be either an informal, described textual content (TextualDescription) or it can be a more formally structured representation (FormalDescription).
Technology considerations: Informal descriptions allow for text similarity processing, a formal description allows for applying case based similarity measures."^^xsd#string].
tmo#taskDescription[rdfs#domain -> tmo#Task].
tmo#taskDescription[rdfs#label -> "taskDescription"^^xsd#string].
tmo#taskDescription[rdfs#subPropertyOf -> nao#description].

tmo#taskGoal[rdf#type -> rdf#Property].
tmo#taskGoal[rdfs#domain -> tmo#Task].
tmo#taskGoal[rdfs#label -> "taskGoal"^^xsd#string].
tmo#taskGoal[rdfs#range -> rdfs#Resource].

tmo#taskId[rdf#type -> rdf#Property].
tmo#taskId[nrl#maxCardinality -> "1"^^xsd#string].
tmo#taskId[nrl#minCardinality -> "1"^^xsd#string].
tmo#taskId[rdfs#comment -> "The Task Identifier allows a unique identification of a task object within the range of all Nepomuk objects.
The Task Identifier is automatically generated during the creation of a task. The generation of identifiers (IDs) is a Nepomuk architecture issue (Wp2000/WP6000)."^^xsd#string].
tmo#taskId[rdfs#domain -> tmo#Task].
tmo#taskId[rdfs#label -> "taskId"^^xsd#string].
tmo#taskId[rdfs#range -> rdfs#Literal].

tmo#taskName[rdf#type -> rdf#Property].
tmo#taskName[nrl#maxCardinality -> "1"^^xsd#string].
tmo#taskName[rdfs#comment -> "The Task Name helps the user to identify a task in a list. It should be expressive enough to give a meaningful recognition. Details should be written in the description attribute instead. A name attribute is not allowed to contain line breaks."^^xsd#string].
tmo#taskName[rdfs#domain -> tmo#Task].
tmo#taskName[rdfs#label -> "taskName"^^xsd#string].
tmo#taskName[rdfs#range -> rdfs#Literal].
tmo#taskName[rdfs#subPropertyOf -> nao#prefLabel].

tmo#taskPrivacyState[rdf#type -> rdf#Property].
tmo#taskPrivacyState[nrl#maxCardinality -> "1"^^xsd#string].
tmo#taskPrivacyState[rdfs#comment -> "For the separation between professional and private purpose of a task, this attribute provides with the values \"professional/private\" a high level separation of privacy in terms of setting distribution rights to other users for the task.
This separation may arise as a general Nepomuk issue and may therefore be handled in conjunction with a privacy preserving SSD architecture."^^xsd#string].
tmo#taskPrivacyState[rdfs#domain -> tmo#Task].
tmo#taskPrivacyState[rdfs#label -> "taskPrivacyState"^^xsd#string].
tmo#taskPrivacyState[rdfs#range -> tmo#TaskPrivacyState].
tmo#taskPrivacyState[rdfs#subPropertyOf -> tmo#stateTypeRole].

tmo#taskReference[rdf#type -> rdf#Property].
tmo#taskReference[nrl#maxCardinality -> "1"^^xsd#string].
tmo#taskReference[rdfs#domain -> tmo#Task].
tmo#taskReference[rdfs#label -> "taskReference"^^xsd#string].
tmo#taskReference[rdfs#range -> tmo#Task].

tmo#taskSource[rdf#type -> rdf#Property].
tmo#taskSource[nrl#maxCardinality -> "1"^^xsd#string].
tmo#taskSource[rdfs#comment -> "here can be stated from which sources a task was derived. e.g from another task or from an task pattern"^^xsd#string].
tmo#taskSource[rdfs#domain -> tmo#Task].
tmo#taskSource[rdfs#label -> "taskSource"^^xsd#string].
tmo#taskSource[rdfs#range -> rdfs#Resource].
tmo#taskSource[rdfs#subPropertyOf -> tmo#taskReference].

tmo#taskState[rdf#type -> rdf#Property].
tmo#taskState[nrl#maxCardinality -> "1"^^xsd#string].
tmo#taskState[nrl#minCardinality -> "1"^^xsd#string].
tmo#taskState[rdfs#comment -> "The task state describes the current state of the task as described in Section 5.2.7."^^xsd#string].
tmo#taskState[rdfs#domain -> tmo#Task].
tmo#taskState[rdfs#label -> "taskState"^^xsd#string].
tmo#taskState[rdfs#range -> tmo#TaskState].
tmo#taskState[rdfs#subPropertyOf -> tmo#stateTypeRole].

tmo#taskStateChangesFrom[rdf#type -> rdf#Property].
tmo#taskStateChangesFrom[nrl#maxCardinality -> "1"^^xsd#string].
tmo#taskStateChangesFrom[rdfs#domain -> tmo#TaskState].
tmo#taskStateChangesFrom[rdfs#label -> "taskStateChangesFrom"^^xsd#string].
tmo#taskStateChangesFrom[rdfs#range -> tmo#TaskState].
tmo#taskStateChangesFrom[rdfs#subPropertyOf -> tmo#stateTypeRole].

tmo#taskStateChangesTo[rdf#type -> rdf#Property].
tmo#taskStateChangesTo[nrl#maxCardinality -> "1"^^xsd#string].
tmo#taskStateChangesTo[rdfs#domain -> tmo#TaskState].
tmo#taskStateChangesTo[rdfs#label -> "taskStateChangesTo"^^xsd#string].
tmo#taskStateChangesTo[rdfs#range -> tmo#TaskState].
tmo#taskStateChangesTo[rdfs#subPropertyOf -> tmo#stateTypeRole].

tmo#taskTransmission[rdf#type -> rdf#Property].
tmo#taskTransmission[nrl#inverseProperty -> tmo#transmissionTask].
tmo#taskTransmission[rdfs#domain -> tmo#Task].
tmo#taskTransmission[rdfs#label -> "taskTransmission"^^xsd#string].
tmo#taskTransmission[rdfs#range -> tmo#TaskTransmission].

tmo#timemanagement[rdf#type -> rdf#Property].
tmo#timemanagement[nrl#maxCardinality -> "1"^^xsd#string].
tmo#timemanagement[rdfs#label -> "timemanagement"^^xsd#string].
tmo#timemanagement[rdfs#range -> rdfs#Literal].

tmo#transmissionFrom[rdf#type -> rdf#Property].
tmo#transmissionFrom[nrl#maxCardinality -> "1"^^xsd#string].
tmo#transmissionFrom[nrl#minCardinality -> "1"^^xsd#string].
tmo#transmissionFrom[rdfs#domain -> tmo#TaskTransmission].
tmo#transmissionFrom[rdfs#label -> "transmissionFrom"^^xsd#string].
tmo#transmissionFrom[rdfs#range -> pimo#Person].

tmo#transmissionState[rdf#type -> rdf#Property].
tmo#transmissionState[nrl#maxCardinality -> "1"^^xsd#string].
tmo#transmissionState[nrl#minCardinality -> "1"^^xsd#string].
tmo#transmissionState[rdfs#domain -> tmo#TaskTransmission].
tmo#transmissionState[rdfs#label -> "transmissionState"^^xsd#string].
tmo#transmissionState[rdfs#range -> tmo#TransmissionState].
tmo#transmissionState[rdfs#subPropertyOf -> tmo#stateTypeRole].

tmo#transmissionStateChangesFrom[rdf#type -> rdf#Property].
tmo#transmissionStateChangesFrom[nrl#maxCardinality -> "1"^^xsd#string].
tmo#transmissionStateChangesFrom[rdfs#domain -> tmo#TransmissionState].
tmo#transmissionStateChangesFrom[rdfs#label -> "transmissionStateChangesFrom"^^xsd#string].
tmo#transmissionStateChangesFrom[rdfs#range -> tmo#TransmissionState].
tmo#transmissionStateChangesFrom[rdfs#subPropertyOf -> tmo#stateTypeRole].

tmo#transmissionStateChangesTo[rdf#type -> rdf#Property].
tmo#transmissionStateChangesTo[nrl#maxCardinality -> "1"^^xsd#string].
tmo#transmissionStateChangesTo[rdfs#domain -> tmo#TransmissionState].
tmo#transmissionStateChangesTo[rdfs#label -> "transmissionStateChangesTo"^^xsd#string].
tmo#transmissionStateChangesTo[rdfs#range -> tmo#TransmissionState].
tmo#transmissionStateChangesTo[rdfs#subPropertyOf -> tmo#stateTypeRole].

tmo#transmissionTask[rdf#type -> rdf#Property].
tmo#transmissionTask[nrl#inverseProperty -> tmo#taskTransmission].
tmo#transmissionTask[nrl#maxCardinality -> "1"^^xsd#string].
tmo#transmissionTask[nrl#minCardinality -> "1"^^xsd#string].
tmo#transmissionTask[rdfs#domain -> tmo#TaskTransmission].
tmo#transmissionTask[rdfs#label -> "transmissionTask"^^xsd#string].
tmo#transmissionTask[rdfs#range -> tmo#Task].
tmo#transmissionTask[rdfs#subPropertyOf -> tmo#taskReference].

tmo#transmissionTo[rdf#type -> rdf#Property].
tmo#transmissionTo[nrl#maxCardinality -> "1"^^xsd#string].
tmo#transmissionTo[nrl#minCardinality -> "1"^^xsd#string].
tmo#transmissionTo[rdfs#domain -> tmo#TaskTransmission].
tmo#transmissionTo[rdfs#label -> "transmissionTo"^^xsd#string].
tmo#transmissionTo[rdfs#range -> pimo#Person].

tmo#transmissionType[rdf#type -> rdf#Property].
tmo#transmissionType[nrl#maxCardinality -> "1"^^xsd#string].
tmo#transmissionType[nrl#minCardinality -> "1"^^xsd#string].
tmo#transmissionType[rdfs#domain -> tmo#TaskTransmission].
tmo#transmissionType[rdfs#label -> "transmissionType"^^xsd#string].
tmo#transmissionType[rdfs#range -> tmo#TransmissionType].
tmo#transmissionType[rdfs#subPropertyOf -> tmo#stateTypeRole].

tmo#urgency[rdf#type -> rdf#Property].
tmo#urgency[nrl#maxCardinality -> "1"^^xsd#string].
tmo#urgency[rdfs#domain -> tmo#Task].
tmo#urgency[rdfs#label -> "urgency"^^xsd#string].
tmo#urgency[rdfs#range -> tmo#Urgency].
tmo#urgency[rdfs#subPropertyOf -> tmo#timemanagement].

"http://www.semanticdesktop.org/ontologies/2008/05/20/tmo/v1.1/"^^\iri[rdf#type -> owl#Ontology].
